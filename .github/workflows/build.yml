name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  build:
    name: "Build, Test, Analyze and Publish"
    runs-on: windows-latest

    env:
      DOTNET_NOLOGO: true

    steps:
      # Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up .NET SDKs
      - name: Setup .NET SDKs
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            8.0.x

      # Cache NUKE temp files to speed up builds
      - name: Cache NUKE Temp
        uses: actions/cache@v4
        with:
          path: .nuke/temp
          key: ${{ runner.os }}-${{ hashFiles('NodeVersion') }}

      # Run the NUKE build script
      - name: Run NUKE Build
        run: ./build.ps1
        env:
          NuGetApiKey: ${{ secrets.NUGETAPIKEY }}

      # Check for code coverage report
      - name: Check for Code Coverage File
        id: check_files
        uses: andstor/file-existence-action@v3
        with:
          files: "TestResults/reports/lcov.info"

      # Upload code coverage to Coveralls
      - name: Upload to Coveralls
        uses: coverallsapp/github-action@v2
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: TestResults/reports/lcov.info

      # Upload build artifacts
      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            ./Artifacts/*
            ./TestResults/*.trx

  only-unit-tests:
    name: "Run Unit Tests Only"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-15]

    steps:
      # Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up .NET SDKs
      - name: Setup .NET SDKs
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            8.0.x

      # Run the NUKE Unit Test script
      - name: Run Unit Tests
        run: ./build.sh UnitTests

      # Upload unit test artifacts
      - name: Upload Unit Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-artifacts
          path: ./TestResults/*.trx

  publish-test-results:
    name: "Publish Tests Results"
    needs: [build, only-unit-tests]
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()

    steps:
      # Download test artifacts
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      # Publish test results as comments
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          comment_mode: always
          files: artifacts/**/**/*.trx

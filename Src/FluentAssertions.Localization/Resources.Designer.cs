//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FluentAssertions.Localization {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FluentAssertions.Localization.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Be strict about the order of items in byte arrays.
        /// </summary>
        public static string Array_BeStrictAboutItemsOrderInByteArrays {
            get {
                return ResourceManager.GetString("Array_BeStrictAboutItemsOrderInByteArrays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare a multi-dimensional array to something else..
        /// </summary>
        public static string Array_CannotCompareMultiDimArrayToSomethingElse {
            get {
                return ResourceManager.GetString("Array_CannotCompareMultiDimArrayToSomethingElse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare a multi-dimensional array to {0}..
        /// </summary>
        public static string Array_CannotCompareMultiDimArrayToX0Format {
            get {
                return ResourceManager.GetString("Array_CannotCompareMultiDimArrayToX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:array}} to have {0} dimension(s), but it has {1}..
        /// </summary>
        public static string Array_ExpectedArrayToHaveX0DimensionsButItHasX1Format {
            get {
                return ResourceManager.GetString("Array_ExpectedArrayToHaveX0DimensionsButItHasX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected dimension {0} to contain {1} item(s), but found {2}..
        /// </summary>
        public static string Array_ExpectedDimensionX0ToContainX1ItemsFormat {
            get {
                return ResourceManager.GetString("Array_ExpectedDimensionX0ToContainX1ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected assembly {0} not to reference assembly {1}{{reason}}..
        /// </summary>
        public static string Assembly_ExpectedAssemblyX0NotToReferenceAssemblyX1Format {
            get {
                return ResourceManager.GetString("Assembly_ExpectedAssemblyX0NotToReferenceAssemblyX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected assembly {0} to define type {1}.{2}, but it does not..
        /// </summary>
        public static string Assembly_ExpectedAssemblyX0ToDefineTypeX1X2ButItDoesNotFormat {
            get {
                return ResourceManager.GetString("Assembly_ExpectedAssemblyX0ToDefineTypeX1X2ButItDoesNotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected assembly {0} to reference assembly {1}{{reason}}, but it does not..
        /// </summary>
        public static string Assembly_ExpectedAssemblyX0ToReferenceAssemblyX1ButItDoesNotFormat {
            get {
                return ResourceManager.GetString("Assembly_ExpectedAssemblyX0ToReferenceAssemblyX1ButItDoesNotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} from expectation to be a {1}{{reason}}, but found a {2}..
        /// </summary>
        public static string Assertion_ExpectedX0FromExpectationToBeAX1ButFoundAX2Format {
            get {
                return ResourceManager.GetString("Assertion_ExpectedX0FromExpectationToBeAX1ButFoundAX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} from subject to be a {1}{{reason}}, but found a {2}..
        /// </summary>
        public static string Assertion_ExpectedX0FromSubjectToBeAX1ButFoundAX2Format {
            get {
                return ResourceManager.GetString("Assertion_ExpectedX0FromSubjectToBeAX1ButFoundAX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create the NSpec assertion type.
        /// </summary>
        public static string Assertion_FailedToCreateNSpecAssertionType {
            get {
                return ResourceManager.GetString("Assertion_FailedToCreateNSpecAssertionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create the XUnit assertion type.
        /// </summary>
        public static string Assertion_FailedToCreateXUnitAssertionType {
            get {
                return ResourceManager.GetString("Assertion_FailedToCreateXUnitAssertionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invoke Action&lt;{0}&gt; when {1}.
        /// </summary>
        public static string Assertion_InvokeActionX0WhenX1Format {
            get {
                return ResourceManager.GetString("Assertion_InvokeActionX0WhenX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **WARNING** because message &apos;{0}&apos; could not be formatted with string.Format{1}{2}.
        /// </summary>
        public static string Assertion_WarningBecauseMessageX0CouldNotBeFormattedWithStringFormatX1X2Format {
            get {
                return ResourceManager.GetString("Assertion_WarningBecauseMessageX0CouldNotBeFormattedWithStringFormatX1X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:boolean}} to be false{{reason}}.
        /// </summary>
        public static string Bool_ExpectedBoolToBeFalse {
            get {
                return ResourceManager.GetString("Bool_ExpectedBoolToBeFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:boolean}} to be true{{reason}}.
        /// </summary>
        public static string Bool_ExpectedBoolToBeTrue {
            get {
                return ResourceManager.GetString("Bool_ExpectedBoolToBeTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:boolean}} to be {0}{{reason}}.
        /// </summary>
        public static string Bool_ExpectedBoolToBeX0Format {
            get {
                return ResourceManager.GetString("Bool_ExpectedBoolToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:nullable boolean}} not to be {0}{{reason}}.
        /// </summary>
        public static string Bool_ExpectedNullableBoolNotToBeX0Format {
            get {
                return ResourceManager.GetString("Bool_ExpectedNullableBoolNotToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aborting strict order comparison of collections after {0} items failed at {1}.
        /// </summary>
        public static string Collection_AbortingStrictOrderComparisonAfterX0ItemsFailedAtX1Format {
            get {
                return ResourceManager.GetString("Collection_AbortingStrictOrderComparisonAfterX0ItemsFailedAtX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always be strict about the collection order.
        /// </summary>
        public static string Collection_AlwaysBeStrictAboutCollectionOrder {
            get {
                return ResourceManager.GetString("Collection_AlwaysBeStrictAboutCollectionOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At index {0}:{1}{2}.
        /// </summary>
        public static string Collection_AtIndexX0FailuresFormat {
            get {
                return ResourceManager.GetString("Collection_AtIndexX0FailuresFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Be not strict about the order of collections when {0}.
        /// </summary>
        public static string Collection_BeNotStrictAboutCollectionsOrderWhenX0Format {
            get {
                return ResourceManager.GetString("Collection_BeNotStrictAboutCollectionsOrderWhenX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Be strict about the order of collection items when path is {0}.
        /// </summary>
        public static string Collection_BeStrictAboutCollectionItemsOrderWhenPathIsX0Format {
            get {
                return ResourceManager.GetString("Collection_BeStrictAboutCollectionItemsOrderWhenPathIsX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Be strict about the order of collections when {0}.
        /// </summary>
        public static string Collection_BeStrictAboutCollectionsOrderWhenX0Format {
            get {
                return ResourceManager.GetString("Collection_BeStrictAboutCollectionsOrderWhenX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but collection is empty..
        /// </summary>
        public static string Collection_ButCollectionIsEmpty {
            get {
                return ResourceManager.GetString("Collection_ButCollectionIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but collection is &lt;null&gt;..
        /// </summary>
        public static string Collection_ButCollectionIsNull {
            get {
                return ResourceManager.GetString("Collection_ButCollectionIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but found collection is &lt;null&gt;..
        /// </summary>
        public static string Collection_ButFoundCollectionIsNull {
            get {
                return ResourceManager.GetString("Collection_ButFoundCollectionIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but found empty collection..
        /// </summary>
        public static string Collection_ButFoundEmptyCollection {
            get {
                return ResourceManager.GetString("Collection_ButFoundEmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but the collection is empty..
        /// </summary>
        public static string Collection_ButTheCollectionIsEmpty {
            get {
                return ResourceManager.GetString("Collection_ButTheCollectionIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but {0} contains {1} item(s) less..
        /// </summary>
        public static string Collection_ButX0ContainsX1ItemsLessFormat {
            get {
                return ResourceManager.GetString("Collection_ButX0ContainsX1ItemsLessFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but {0} contains {1} item(s) too many..
        /// </summary>
        public static string Collection_ButX0ContainsX1ItemsTooManyFormat {
            get {
                return ResourceManager.GetString("Collection_ButX0ContainsX1ItemsTooManyFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but {0} differs at index {1}..
        /// </summary>
        public static string Collection_ButX0DiffersAtIndexX1Format {
            get {
                return ResourceManager.GetString("Collection_ButX0DiffersAtIndexX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but {0} such items were found..
        /// </summary>
        public static string Collection_ButX0SuchItemsWereFoundFormat {
            get {
                return ResourceManager.GetString("Collection_ButX0SuchItemsWereFoundFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assert collection ordering without specifying a comparer..
        /// </summary>
        public static string Collection_CannotAssertCollectionOrderingWithoutComparer {
            get {
                return ResourceManager.GetString("Collection_CannotAssertCollectionOrderingWithoutComparer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assert collection ordering without specifying a property..
        /// </summary>
        public static string Collection_CannotAssertCollectionOrderingWithoutProperty {
            get {
                return ResourceManager.GetString("Collection_CannotAssertCollectionOrderingWithoutProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assert a &lt;null&gt; collection against a subset..
        /// </summary>
        public static string Collection_CannotAssertNullAgainstSubset {
            get {
                return ResourceManager.GetString("Collection_CannotAssertNullAgainstSubset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare collection count against a &lt;null&gt; predicate..
        /// </summary>
        public static string Collection_CannotCompareCollectionCountAgainstNullPredicate {
            get {
                return ResourceManager.GetString("Collection_CannotCompareCollectionCountAgainstNullPredicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare collection with &lt;null&gt;..
        /// </summary>
        public static string Collection_CannotCompareCollectionWithNull {
            get {
                return ResourceManager.GetString("Collection_CannotCompareCollectionWithNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify against an empty collection of inspectors.
        /// </summary>
        public static string Collection_CannotVerifyAgainstEmptyInspectors {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyAgainstEmptyInspectors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify against a &lt;null&gt; collection of inspectors.
        /// </summary>
        public static string Collection_CannotVerifyAgainstNullInspectors {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyAgainstNullInspectors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify containment against an empty collection.
        /// </summary>
        public static string Collection_CannotVerifyContainmentAgainstEmptyCollection {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyContainmentAgainstEmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify containment against a &lt;null&gt; collection.
        /// </summary>
        public static string Collection_CannotVerifyContainmentAgainstNullCollection {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyContainmentAgainstNullCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify count against a &lt;null&gt; collection..
        /// </summary>
        public static string Collection_CannotVerifyCountAgainstNull {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyCountAgainstNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify inequivalence against a &lt;null&gt; collection..
        /// </summary>
        public static string Collection_CannotVerifyInequivalenceAgainstANullCollection {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyInequivalenceAgainstANullCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify intersection against a &lt;null&gt; collection..
        /// </summary>
        public static string Collection_CannotVerifyIntersectionAgainstNull {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyIntersectionAgainstNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify non-containment against an empty collection.
        /// </summary>
        public static string Collection_CannotVerifyNonContainmentAgainstEmptyCollection {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyNonContainmentAgainstEmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify non-containment against a &lt;null&gt; collection.
        /// </summary>
        public static string Collection_CannotVerifyNonContainmentAgainstNull {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyNonContainmentAgainstNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify ordered containment against a &lt;null&gt; collection..
        /// </summary>
        public static string Collection_CannotVerifyOrderedContainmentAgainstNull {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyOrderedContainmentAgainstNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify a subset against a &lt;null&gt; collection..
        /// </summary>
        public static string Collection_CannotVerifySubsetAgainstNull {
            get {
                return ResourceManager.GetString("Collection_CannotVerifySubsetAgainstNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify value containment with an empty sequence.
        /// </summary>
        public static string Collection_CannotVerifyValueContainmentAgainstEmptySequence {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyValueContainmentAgainstEmptySequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify value containment against a &lt;null&gt; collection of values.
        /// </summary>
        public static string Collection_CannotVerifyValueContainmentAgainstNull {
            get {
                return ResourceManager.GetString("Collection_CannotVerifyValueContainmentAgainstNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but the collection is empty..
        /// </summary>
        public static string Collection_CommaButCollectionIsEmpty {
            get {
                return ResourceManager.GetString("Collection_CommaButCollectionIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but collection is &lt;null&gt;..
        /// </summary>
        public static string Collection_CommaButCollectionIsNull {
            get {
                return ResourceManager.GetString("Collection_CommaButCollectionIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but found an empty collection..
        /// </summary>
        public static string Collection_CommaButFoundEmptyCollection {
            get {
                return ResourceManager.GetString("Collection_CommaButFoundEmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but found one at index {0}..
        /// </summary>
        public static string Collection_CommaButFoundOneAtIndexX0Format {
            get {
                return ResourceManager.GetString("Collection_CommaButFoundOneAtIndexX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but found several at indices {0}..
        /// </summary>
        public static string Collection_CommaButFoundSeveralAtX0Format {
            get {
                return ResourceManager.GetString("Collection_CommaButFoundSeveralAtX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but found {0} where item at index {1} is in wrong order..
        /// </summary>
        public static string Collection_CommaButFoundX0WhereX1InWrongOrderFormat {
            get {
                return ResourceManager.GetString("Collection_CommaButFoundX0WhereX1InWrongOrderFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but items {0} are not unique..
        /// </summary>
        public static string Collection_CommaButItemsX0AreNotUniqueFormat {
            get {
                return ResourceManager.GetString("Collection_CommaButItemsX0AreNotUniqueFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but items {1} are not part of the superset..
        /// </summary>
        public static string Collection_CommaButItemsX1AreNotPartOfSupersetFormat {
            get {
                return ResourceManager.GetString("Collection_CommaButItemsX1AreNotPartOfSupersetFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but item {0} is not unique..
        /// </summary>
        public static string Collection_CommaButItemX0IsNotUniqueFormat {
            get {
                return ResourceManager.GetString("Collection_CommaButItemX0IsNotUniqueFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but {0}{2}contains {1} item(s)..
        /// </summary>
        public static string Collection_CommaButX0X2ContainsX1ItemsFormat {
            get {
                return ResourceManager.GetString("Collection_CommaButX0X2ContainsX1ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but {0}{3}contains {1} item(s) less than{3}{2}..
        /// </summary>
        public static string Collection_CommaButX0X3ContainsX1ItemsLessThanWX2Format {
            get {
                return ResourceManager.GetString("Collection_CommaButX0X3ContainsX1ItemsLessThanWX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but {0}{3}contains {1} item(s) more than{3}{2}..
        /// </summary>
        public static string Collection_CommaButX0X3ContainsX1ItemsMoreThanWX2Format {
            get {
                return ResourceManager.GetString("Collection_CommaButX0X3ContainsX1ItemsMoreThanWX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparing subject at {0}[{1}] with the expectation at {0}[{2}].
        /// </summary>
        public static string Collection_ComparingSubjectAtX0X1WithExpectationAtXX2Format {
            get {
                return ResourceManager.GetString("Collection_ComparingSubjectAtX0X1WithExpectationAtXX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparing subject {0} and expectation {1} at {2} using simple value equality.
        /// </summary>
        public static string Collection_ComparingSubjectX0AndExpectationX1AtX2WithValueEqualityFormat {
            get {
                return ResourceManager.GetString("Collection_ComparingSubjectX0AndExpectationX1AtX2WithValueEqualityFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contained {0} failures.
        /// </summary>
        public static string Collection_ContainedX0FailuresFormat {
            get {
                return ResourceManager.GetString("Collection_ContainedX0FailuresFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect collections {0} and {1} to be equal{{reason}}..
        /// </summary>
        public static string Collection_DidNotExpectCollectionsX0AndX1ToBeEqualFormat {
            get {
                return ResourceManager.GetString("Collection_DidNotExpectCollectionsX0AndX1ToBeEqualFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect collection to contain items in ascending order{{reason}}.
        /// </summary>
        public static string Collection_DidNotExpectCollectionToContainItemsInAscendingOrder {
            get {
                return ResourceManager.GetString("Collection_DidNotExpectCollectionToContainItemsInAscendingOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect collection to contain items in descending order{{reason}}.
        /// </summary>
        public static string Collection_DidNotExpectCollectionToContainItemsInDescendingOrder {
            get {
                return ResourceManager.GetString("Collection_DidNotExpectCollectionToContainItemsInDescendingOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:collection}} to intersect with {0}{{reason}}, but found the following shared items {1}..
        /// </summary>
        public static string Collection_DidNotExpectCollectionToIntersectWithX0ButFoundSharedItemsX1Format {
            get {
                return ResourceManager.GetString("Collection_DidNotExpectCollectionToIntersectWithX0ButFoundSharedItemsX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:collection}} to intersect with {0}{{reason}}.
        /// </summary>
        public static string Collection_DidNotExpectCollectionToIntersectWithX0Format {
            get {
                return ResourceManager.GetString("Collection_DidNotExpectCollectionToIntersectWithX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:collection}} {0} to be a subset of {1}{{reason}}..
        /// </summary>
        public static string Collection_DidNotExpectCollectionX0ToBeSubsetOfX1Format {
            get {
                return ResourceManager.GetString("Collection_DidNotExpectCollectionX0ToBeSubsetOfX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:collection}} {0} to intersect with {1}{{reason}}.
        /// </summary>
        public static string Collection_DidNotExpectCollectionX0ToIntersectWithX1Format {
            get {
                return ResourceManager.GetString("Collection_DidNotExpectCollectionX0ToIntersectWithX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{context:Expectation}} implements {0}, so cannot determine which one to use for asserting the equivalency of the collection. .
        /// </summary>
        public static string Collection_ExpectationImplementsX0CannotChooseWhichOneToUseForAssertingFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectationImplementsX0CannotChooseWhichOneToUseForAssertingFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a collection, but {{context:subject}} is of a non-collection type..
        /// </summary>
        public static string Collection_ExpectedACollectionBuSubjectIsNotCollectionType {
            get {
                return ResourceManager.GetString("Collection_ExpectedACollectionBuSubjectIsNotCollectionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a collection, but {{context:subject}} is &lt;null&gt;..
        /// </summary>
        public static string Collection_ExpectedACollectionButSubjectIsNull {
            get {
                return ResourceManager.GetString("Collection_ExpectedACollectionButSubjectIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} not to be empty{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionNotToBeEmpty {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionNotToBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to be empty{{reason}}, .
        /// </summary>
        public static string Collection_ExpectedCollectionNotToBeEmptyComma {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionNotToBeEmptyComma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} not to be empty{{reason}}..
        /// </summary>
        public static string Collection_ExpectedCollectionNotToBeEmptyDot {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionNotToBeEmptyDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} not to be equivalent{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionNotToBeEquivalent {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionNotToBeEquivalent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to be null or empty{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionNotToBeNullOrEmpty {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionNotToBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} not to contain &lt;null&gt;s{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionNotToContainNull {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionNotToContainNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} not to contain &lt;null&gt;s on {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionNotToContainNullOnX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionNotToContainNullOnX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} not to contain {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionNotToContainX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionNotToContainX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected collections not to be equal{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionsNotToBeEqual {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionsNotToBeEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to be equal to {0}{{reason}}, .
        /// </summary>
        public static string Collection_ExpectedCollectionToBeEqualToX0CommaFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToBeEqualToX0CommaFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to be equal to {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToBeEqualToX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToBeEqualToX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to be ordered by {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToBeOrderedByX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToBeOrderedByX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to be a subset of {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToBeSubsetOfX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToBeSubsetOfX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain at least {0} item(s){{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainAtLeastX0ItemsFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainAtLeastX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain at most {0} item(s){{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainAtMostX0ItemsFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainAtMostX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain element assignable to type {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainElementAssignableToTypeX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainElementAssignableToTypeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain equivalent of {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainEquivalentOfX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainEquivalentOfX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain exactly {0} items, but it contains {1} items.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainExactlyX0ItemsButContainsX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainExactlyX0ItemsButContainsX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain fewer than {0} item(s){{reason}},.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainFewerThanX0ItemsFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainFewerThanX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain items in ascending order{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainItemsInAscendingOrder {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainItemsInAscendingOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain items in descending order{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainItemsInDescendingOrder {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainItemsInDescendingOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain more than {0} item(s){{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainMoreThanX0ItemsFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainMoreThanX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain only items matching {0}{{reason}}, but {1} do(es) not match..
        /// </summary>
        public static string Collection_ExpectedCollectionToContainOnlyItemsMatchingX0ButX1DoesNotMatchFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainOnlyItemsMatchingX0ButX1DoesNotMatchFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain only items matching {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainOnlyItemsMatchingX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainOnlyItemsMatchingX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain only items of type {0}{{reason}}, but item {1} at index {2} is of type {3}..
        /// </summary>
        public static string Collection_ExpectedCollectionToContainOnlyItemsOfTypeX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainOnlyItemsOfTypeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain a single item{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainSingleItem {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainSingleItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain a single item matching {0}{{reason}}, .
        /// </summary>
        public static string Collection_ExpectedCollectionToContainSingleItemMatchingX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainSingleItemMatchingX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain {0} in order{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainX0InOrderFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainX0InOrderFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain {0} item(s){{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainX0ItemFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainX0ItemFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to contain {0} items{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToContainX0ItemsFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToContainX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to end with {0}{{reason}}, .
        /// </summary>
        public static string Collection_ExpectedCollectionToEndWithX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToEndWithX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to have element at index {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToHaveElementAtIndexX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToHaveElementAtIndexX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to have the same count as {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToHaveSameCountAsX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToHaveSameCountAsX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to have {0} item(s){{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToHaveX0ItemsFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToHaveX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to have {0} precede {1}{{reason}}, .
        /// </summary>
        public static string Collection_ExpectedCollectionToHaveX0PrecedeX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToHaveX0PrecedeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to have {0} succeed {1}{{reason}}, .
        /// </summary>
        public static string Collection_ExpectedCollectionToHaveX0SucceedX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToHaveX0SucceedX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to intersect with {0}{{reason}}, but {1} does not contain any shared items..
        /// </summary>
        public static string Collection_ExpectedCollectionToIntersectWithX0ButX1DoesNotContainSharedItemsFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToIntersectWithX0ButX1DoesNotContainSharedItemsForma" +
                        "t", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to intersect with {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToIntersectWithX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToIntersectWithX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to not contain {0} item(s){{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToNotContainX0ItemsFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToNotContainX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to not have the same count as {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToNotHaveSameCountAsX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToNotHaveSameCountAsX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to not have {0} item(s){{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToNotHaveX0ItemsFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToNotHaveX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to not contain {0}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToNotX0ContainFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToNotX0ContainFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to only have unique items{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionToOnlyHaveUniqueItems {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToOnlyHaveUniqueItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to only have unique items on {0}{{reason}}, but items {1} are not unique..
        /// </summary>
        public static string Collection_ExpectedCollectionToOnlyHaveUniqueItemsOnX0ButItemsX1AreNotFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToOnlyHaveUniqueItemsOnX0ButItemsX1AreNotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to only have unique items on {0}{{reason}}, but item {1} is not unique..
        /// </summary>
        public static string Collection_ExpectedCollectionToOnlyHaveUniqueItemsOnX0ButItemX1IsNotUniqueFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToOnlyHaveUniqueItemsOnX0ButItemX1IsNotUniqueFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to satisfy all inspectors{{reason}}, .
        /// </summary>
        public static string Collection_ExpectedCollectionToSatisfyAllInspectors {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToSatisfyAllInspectors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} to start with {0}{{reason}}, .
        /// </summary>
        public static string Collection_ExpectedCollectionToStartWithX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionToStartWithX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} not to be equivalent to collection {1}{{reason}}..
        /// </summary>
        public static string Collection_ExpectedCollectionX0NotToBeEquivalentToX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0NotToBeEquivalentToX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} not to be equivalent with collection {1}{{reason}}..
        /// </summary>
        public static string Collection_ExpectedCollectionX0NotToBeEquivalentWithX1DotFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0NotToBeEquivalentWithX1DotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} not to be equivalent with collection {1}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionX0NotToBeEquivalentWithX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0NotToBeEquivalentWithX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to be ordered{1}{{reason}} and result in {2}..
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToBeOrderedX1AndResultInX2Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToBeOrderedX1AndResultInX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to contain equivalent of {1}..
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToContainEquivalentOfX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToContainEquivalentOfX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to contain items {1} in order{{reason}}, but {2} (index {3}) did not appear (in the right order)..
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToContainItemsX1InOrderButX2DidNotAppearFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToContainItemsX1InOrderButX2DidNotAppearFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to contain {1}{{reason}}, but could not find {2}..
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToContainX1ButCouldNotFindX2Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToContainX1ButCouldNotFindX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to contain {1}{{reason}}..
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToContainX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToContainX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to have a count {1}{{reason}}, but count is {2}..
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToHaveCountX1ButCountIsX2Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToHaveCountX1ButCountIsX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to have an item matching {1}{{reason}}..
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToHaveItemMatchingX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToHaveItemMatchingX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to not contain element {1}{{reason}}..
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToNotContainElementX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToNotContainElementX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to not contain {1}{{reason}}..
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToNotContainX1DotFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToNotContainX1DotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to not contain {1}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToNotContainX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToNotContainX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to not have any items matching {1}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToNotHaveItemsMatchingX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToNotHaveItemsMatchingX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:collection}} {0} to not have the same count as {1}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedCollectionX0ToNotHaveSameCountAsX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedCollectionX0ToNotHaveSameCountAsX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected one or more items{{reason}}, but found none..
        /// </summary>
        public static string Collection_ExpectedOneOrMoreItemsButFoundNone {
            get {
                return ResourceManager.GetString("Collection_ExpectedOneOrMoreItemsButFoundNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:subject}} not to be {0}..
        /// </summary>
        public static string Collection_ExpectedSubjectNotToBeX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedSubjectNotToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:subject}} to be a collection, but it was a {0}.
        /// </summary>
        public static string Collection_ExpectedSubjectToBeACollectionButItWasX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedSubjectToBeACollectionButItWasX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:subject}} to be a collection with {0} item(s){{reason}}.
        /// </summary>
        public static string Collection_ExpectedSubjectToBeCollectionWithX0ItemsFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedSubjectToBeCollectionWithX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type to be {0}{{reason}}, .
        /// </summary>
        public static string Collection_ExpectedTypeToBeX0Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedTypeToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} at index {1}{{reason}}, but found no element..
        /// </summary>
        public static string Collection_ExpectedX0AtIndexX1ButFoundNoElementFormat {
            get {
                return ResourceManager.GetString("Collection_ExpectedX0AtIndexX1ButFoundNoElementFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} at index {1}{{reason}}.
        /// </summary>
        public static string Collection_ExpectedX0AtIndexX1Format {
            get {
                return ResourceManager.GetString("Collection_ExpectedX0AtIndexX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fail failing loose order comparison of collection after {0} items failed at {1}.
        /// </summary>
        public static string Collection_FailFailingLooseOrderComparisonOfCollectionAfterX0ItemsFailedAtX1Format {
            get {
                return ResourceManager.GetString("Collection_FailFailingLooseOrderComparisonOfCollectionAfterX0ItemsFailedAtX1Forma" +
                        "t", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finding the best match of {0} within all items in {1} at {2}[{3}].
        /// </summary>
        public static string Collection_FindingBestMatchOfX0WithinAllItemsInX1AtX2X3Format {
            get {
                return ResourceManager.GetString("Collection_FindingBestMatchOfX0WithinAllItemsInX1AtX2X3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s a match.
        /// </summary>
        public static string Collection_ItIsAMatch {
            get {
                return ResourceManager.GetString("Collection_ItIsAMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strictly comparing expectation {0} at {1} to item with index {2} in {3}.
        /// </summary>
        public static string Collection_StrictlyComparingExpectationX0AtX1ToItemWithIndexZinX3Format {
            get {
                return ResourceManager.GetString("Collection_StrictlyComparingExpectationX0AtX1ToItemWithIndexZinX3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Structurally comparing {0} and expectation {1} at {2}.
        /// </summary>
        public static string Collection_StructurallyComparingX0AndExpectationX1AtX2Format {
            get {
                return ResourceManager.GetString("Collection_StructurallyComparingX0AndExpectationX1AtX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but found a null element..
        /// </summary>
        public static string Common_ButFoundANullElement {
            get {
                return ResourceManager.GetString("Common_ButFoundANullElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but found nothing..
        /// </summary>
        public static string Common_ButFoundNothing {
            get {
                return ResourceManager.GetString("Common_ButFoundNothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but found {0}..
        /// </summary>
        public static string Common_ButFoundX0Format {
            get {
                return ResourceManager.GetString("Common_ButFoundX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but it was..
        /// </summary>
        public static string Common_ButItWas {
            get {
                return ResourceManager.GetString("Common_ButItWas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but it was {0}..
        /// </summary>
        public static string Common_ButItWasX0Format {
            get {
                return ResourceManager.GetString("Common_ButItWasX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but no such item was found..
        /// </summary>
        public static string Common_ButNoSuchItemWasFound {
            get {
                return ResourceManager.GetString("Common_ButNoSuchItemWasFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but some inspectors are not satisfied:.
        /// </summary>
        public static string Common_ButSomeInspectorsAreNotSatisfied {
            get {
                return ResourceManager.GetString("Common_ButSomeInspectorsAreNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but they both reference the same object..
        /// </summary>
        public static string Common_CommaButBothReferenceSameObject {
            get {
                return ResourceManager.GetString("Common_CommaButBothReferenceSameObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but found &lt;null&gt;..
        /// </summary>
        public static string Common_CommaButFoundNull {
            get {
                return ResourceManager.GetString("Common_CommaButFoundNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but found {0}..
        /// </summary>
        public static string Common_CommaButFoundX0Format {
            get {
                return ResourceManager.GetString("Common_CommaButFoundX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but found {1}..
        /// </summary>
        public static string Common_CommaButFoundX1Format {
            get {
                return ResourceManager.GetString("Common_CommaButFoundX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but found {2}..
        /// </summary>
        public static string Common_CommaButFoundX2Format {
            get {
                return ResourceManager.GetString("Common_CommaButFoundX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but found {3}..
        /// </summary>
        public static string Common_CommaButFoundX3Format {
            get {
                return ResourceManager.GetString("Common_CommaButFoundX3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it differs {3}..
        /// </summary>
        public static string Common_CommaButItDiffersX3Format {
            get {
                return ResourceManager.GetString("Common_CommaButItDiffersX3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it differs {4}..
        /// </summary>
        public static string Common_CommaButItDiffersX4Format {
            get {
                return ResourceManager.GetString("Common_CommaButItDiffersX4Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it does..
        /// </summary>
        public static string Common_CommaButItDoes {
            get {
                return ResourceManager.GetString("Common_CommaButItDoes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it does not..
        /// </summary>
        public static string Common_CommaButItDoesNot {
            get {
                return ResourceManager.GetString("Common_CommaButItDoesNot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it is..
        /// </summary>
        public static string Common_CommaButItIs {
            get {
                return ResourceManager.GetString("Common_CommaButItIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it is not..
        /// </summary>
        public static string Common_CommaButItIsNot {
            get {
                return ResourceManager.GetString("Common_CommaButItIsNot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it is {0}..
        /// </summary>
        public static string Common_CommaButItIsX0Format {
            get {
                return ResourceManager.GetString("Common_CommaButItIsX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it is {1}..
        /// </summary>
        public static string Common_CommaButItIsX1Format {
            get {
                return ResourceManager.GetString("Common_CommaButItIsX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it is {2}..
        /// </summary>
        public static string Common_CommaButItIsX2Format {
            get {
                return ResourceManager.GetString("Common_CommaButItIsX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it was..
        /// </summary>
        public static string Common_CommaButItWas {
            get {
                return ResourceManager.GetString("Common_CommaButItWas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it was &lt;null&gt;..
        /// </summary>
        public static string Common_CommaButItWasNull {
            get {
                return ResourceManager.GetString("Common_CommaButItWasNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it was {1}..
        /// </summary>
        public static string Common_CommaButItWasX1Format {
            get {
                return ResourceManager.GetString("Common_CommaButItWasX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it was {2}..
        /// </summary>
        public static string Common_CommaButItWasX2Format {
            get {
                return ResourceManager.GetString("Common_CommaButItWasX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but that attribute was found..
        /// </summary>
        public static string Common_CommaButThatAttributeWasFound {
            get {
                return ResourceManager.GetString("Common_CommaButThatAttributeWasFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but that attribute was not found..
        /// </summary>
        public static string Common_CommaButThatAttributeWasNotFound {
            get {
                return ResourceManager.GetString("Common_CommaButThatAttributeWasNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but {2} differs {3}..
        /// </summary>
        public static string Common_CommaButX2DiffersX3Format {
            get {
                return ResourceManager.GetString("Common_CommaButX2DiffersX3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but {3} differs {4}..
        /// </summary>
        public static string Common_CommaButX3DiffersX4Format {
            get {
                return ResourceManager.GetString("Common_CommaButX3DiffersX4Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , .
        /// </summary>
        public static string Common_CommaSpace {
            get {
                return ResourceManager.GetString("Common_CommaSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:subject}} to be &lt;null&gt;.
        /// </summary>
        public static string Common_ExpectedSubjectToBeNull {
            get {
                return ResourceManager.GetString("Common_ExpectedSubjectToBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;null&gt;.
        /// </summary>
        public static string Common_NullKeyword {
            get {
                return ResourceManager.GetString("Common_NullKeyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid option for detecting value formatters. Valid options include Disabled, Specific and Scan..
        /// </summary>
        public static string Configuration_X0IsNotValidOptionForValueFormattersFormat {
            get {
                return ResourceManager.GetString("Configuration_X0IsNotValidOptionForValueFormattersFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one object found.  FluentAssertions cannot determine which object is meant.  Found objects:{0}{1}.
        /// </summary>
        public static string Constraint_MoreThanOneObjectFoundFoundObjectsX0X1Format {
            get {
                return ResourceManager.GetString("Constraint_MoreThanOneObjectFoundFoundObjectsX0X1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}({1}).
        /// </summary>
        public static string Constructor_DescriptionFormat {
            get {
                return ResourceManager.GetString("Constructor_DescriptionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not convert member {0}..
        /// </summary>
        public static string Conversion_DoNotConvertMemberX0Format {
            get {
                return ResourceManager.GetString("Conversion_DoNotConvertMemberX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try conversion of all members. .
        /// </summary>
        public static string Conversion_TryConversionOfAllMembersSpace {
            get {
                return ResourceManager.GetString("Conversion_TryConversionOfAllMembersSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try conversion of member {0}. .
        /// </summary>
        public static string Conversion_TryConversionOfMemberX0SpaceFormat {
            get {
                return ResourceManager.GetString("Conversion_TryConversionOfMemberX0SpaceFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Without automatic conversion..
        /// </summary>
        public static string Conversion_WithoutAutomaticConversion {
            get {
                return ResourceManager.GetString("Conversion_WithoutAutomaticConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:subject}} to be {{expectation}}{{reason}}, but it contains a cyclic reference..
        /// </summary>
        public static string CyclicReference_ExpectedSubjectToBeExpectationButContainsCyclicReference {
            get {
                return ResourceManager.GetString("CyclicReference_ExpectedSubjectToBeExpectationButContainsCyclicReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but found a &lt;null&gt; DateTimeOffset..
        /// </summary>
        public static string DateTime_ButFoundANullDateTimeOffset {
            get {
                return ResourceManager.GetString("DateTime_ButFoundANullDateTimeOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but found a &lt;null&gt; DateTime..
        /// </summary>
        public static string DateTime_CommaButFoundANullDateTime {
            get {
                return ResourceManager.GetString("DateTime_CommaButFoundANullDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:the date and time}} to be within {0} from {1}{{reason}}, but it was {2}..
        /// </summary>
        public static string DateTime_DidNotExpectDateToBeWithinX0FromX1ButItWasX2Format {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectDateToBeWithinX0FromX1ButItWasX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:the date and time}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_DidNotExpectDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:nullable date and time}} to have a value{{reason}}.
        /// </summary>
        public static string DateTime_DidNotExpectNullableDateTimeToHaveAValue {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectNullableDateTimeToHaveAValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect the date part of {{context:the date and time}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_DidNotExpectTheDatePartOfDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectTheDatePartOfDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect the day part of {{context:the date}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_DidNotExpectTheDayPartOfDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectTheDayPartOfDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect the hour part of {{context:the time}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_DidNotExpectTheHourPartOfTimeToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectTheHourPartOfTimeToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect the minute part of {{context:the time}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_DidNotExpectTheMinutePartOfTimeToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectTheMinutePartOfTimeToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect the month part of {{context:the date}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_DidNotExpectTheMonthPartOfDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectTheMonthPartOfDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect the offset of {{context:the date}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_DidNotExpectTheOffsetOfDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectTheOffsetOfDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect the seconds part of {{context:the time}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_DidNotExpectTheSecondsPartOfTimeToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectTheSecondsPartOfTimeToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect the year part of {{context:the date}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_DidNotExpectTheYearPartOfDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectTheYearPartOfDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:variable}} to have a value{{reason}}.
        /// </summary>
        public static string DateTime_DidNotExpectVariableToHaveAValue {
            get {
                return ResourceManager.GetString("DateTime_DidNotExpectVariableToHaveAValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected date and/or time {0} to be at least {1} after {2}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateAndOrTimeX0ToBeAtLeastX1AfterX2Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateAndOrTimeX0ToBeAtLeastX1AfterX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected date and/or time {0} to be at least {1} before {2}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateAndOrTimeX0ToBeAtLeastX1BeforeX2Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateAndOrTimeX0ToBeAtLeastX1BeforeX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected date and/or time {0} to be exactly {1} after {2}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateAndOrTimeX0ToBeExactlyX1AfterX2Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateAndOrTimeX0ToBeExactlyX1AfterX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected date and/or time {0} to be exactly {1} before {2}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateAndOrTimeX0ToBeExactlyX1BeforeX2Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateAndOrTimeX0ToBeExactlyX1BeforeX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected date and/or time {0} to be less than {1} after {2}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateAndOrTimeX0ToBeLessThanX1AfterX2Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateAndOrTimeX0ToBeLessThanX1AfterX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected date and/or time {0} to be less than {1} before {2}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateAndOrTimeX0ToBeLessThanX1BeforeX2Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateAndOrTimeX0ToBeLessThanX1BeforeX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected date and/or time {0} to be more than {1} after {2}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateAndOrTimeX0ToBeMoreThanX1AfterX2Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateAndOrTimeX0ToBeMoreThanX1AfterX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected date and/or time {0} to be more than {1} before {2}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateAndOrTimeX0ToBeMoreThanX1BeforeX2Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateAndOrTimeX0ToBeMoreThanX1BeforeX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected date and/or time {0} to be within {1} after {2}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateAndOrTimeX0ToBeWithinX1AfterX2Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateAndOrTimeX0ToBeWithinX1AfterX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected date and/or time {0} to be within {1} before {2}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateAndOrTimeX0ToBeWithinX1BeforeX2Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateAndOrTimeX0ToBeWithinX1BeforeX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:date and time}} not to be {0}{{reason}}, but it is..
        /// </summary>
        public static string DateTime_ExpectedDateNotToBeX0ButItIsFormat {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateNotToBeX0ButItIsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be after {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeAfterX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeAfterX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be at least {0} after {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeAtLeastX0AfterX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeAtLeastX0AfterX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be at least {0} before {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeAtLeastX0BeforeX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeAtLeastX0BeforeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be before {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeBeforeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeBeforeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be exactly {0} after {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeExactlyX0AfterX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeExactlyX0AfterX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be exactly {0} before {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeExactlyX0BeforeX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeExactlyX0BeforeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be in {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeInX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeInX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be less than {0} after {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeLessThanX0AfterX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeLessThanX0AfterX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be less than {0} before {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeLessThanX0BeforeX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeLessThanX0BeforeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be more than {0} after {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeMoreThanX0AfterX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeMoreThanX0AfterX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be more than {0} before {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeMoreThanX0BeforeX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeMoreThanX0BeforeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:date and time}} to be one of {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeOneOfX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeOneOfX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be on or after {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeOnOrAfterX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeOnOrAfterX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be on or before {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeOnOrBeforeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeOnOrBeforeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be within {0} after {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeWithinX0AfterX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeWithinX0AfterX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be within {0} before {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeWithinX0BeforeX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeWithinX0BeforeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be within {0} from {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeWithinX0FromX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeWithinX0FromX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:date and time}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:nullable date and time}} to have a value{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedNullableDateTimeToHaveAValue {
            get {
                return ResourceManager.GetString("DateTime_ExpectedNullableDateTimeToHaveAValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the date part of {{context:the date and time}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTheDatePartOfDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTheDatePartOfDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be one of {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTheDateToBeOneOfX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTheDateToBeOneOfX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:the date and time}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTheDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTheDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the day part of {{context:the date}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTheDayPartOfDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTheDayPartOfDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the hour part of {{context:the time}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTheHourPartOfTimeToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTheHourPartOfTimeToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the minute part of {{context:the time}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTheMinutePartOfTimeToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTheMinutePartOfTimeToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the month part of {{context:the date}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTheMonthPartOfDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTheMonthPartOfDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the offset of {{context:the date}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTheOffsetOfDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTheOffsetOfDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the seconds part of {{context:the time}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTheSecondsPartOfTimeToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTheSecondsPartOfTimeToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the year part of {{context:the date}} to be {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTheYearPartOfDateToBeX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTheYearPartOfDateToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:time}} to be greater or equal to {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTimeToBeGreaterOrEqualToX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTimeToBeGreaterOrEqualToX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:time}} to be greater than {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTimeToBeGreaterThanX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTimeToBeGreaterThanX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:time}} to be less or equal to {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTimeToBeLessOrEqualToX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTimeToBeLessOrEqualToX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:time}} to be less than {0}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTimeToBeLessThanX0Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTimeToBeLessThanX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:time}} to be negative{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTimeToBeNegative {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTimeToBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:time}} to be positive{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTimeToBePositive {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTimeToBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:time}} to be within {0} from {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTimeToBeWithinX0FromX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTimeToBeWithinX0FromX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:time}} to not be within {0} from {1}{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedTimeToNotBeWithinX0FromX1Format {
            get {
                return ResourceManager.GetString("DateTime_ExpectedTimeToNotBeWithinX0FromX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:variable}} to have a value{{reason}}.
        /// </summary>
        public static string DateTime_ExpectedVariableToHaveAValue {
            get {
                return ResourceManager.GetString("DateTime_ExpectedVariableToHaveAValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to max time span.
        /// </summary>
        public static string DateTime_MaxTimeSpan {
            get {
                return ResourceManager.GetString("DateTime_MaxTimeSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to min time span.
        /// </summary>
        public static string DateTime_MinTimeSpan {
            get {
                return ResourceManager.GetString("DateTime_MinTimeSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid values are between 0 and 999.
        /// </summary>
        public static string DateTime_ValidValuesAreBetween0And999 {
            get {
                return ResourceManager.GetString("DateTime_ValidValuesAreBetween0And999", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected dictionaries not to be equal{{reason}}.
        /// </summary>
        public static string Dicitonary_ExpectedDictionariesNotToBeEqual {
            get {
                return ResourceManager.GetString("Dicitonary_ExpectedDictionariesNotToBeEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but has additional key(s) {0}.
        /// </summary>
        public static string Dictionary_ButHasAdditionalKeysX0Format {
            get {
                return ResourceManager.GetString("Dictionary_ButHasAdditionalKeysX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but it misses key(s) {0} and has additional key(s) {1}.
        /// </summary>
        public static string Dictionary_ButItMissesKeysX0AndHasAdditionalKeysX1Format {
            get {
                return ResourceManager.GetString("Dictionary_ButItMissesKeysX0AndHasAdditionalKeysX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but it misses key(s) {0}.
        /// </summary>
        public static string Dictionary_ButItMissesKeysX0Format {
            get {
                return ResourceManager.GetString("Dictionary_ButItMissesKeysX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare dictionary count against a &lt;null&gt; predicate..
        /// </summary>
        public static string Dictionary_CannotCompareDictionaryCountAgainstNullPredicate {
            get {
                return ResourceManager.GetString("Dictionary_CannotCompareDictionaryCountAgainstNullPredicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare dictionary with &lt;null&gt;..
        /// </summary>
        public static string Dictionary_CannotCompareDictionaryWithNull {
            get {
                return ResourceManager.GetString("Dictionary_CannotCompareDictionaryWithNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify key containment against an empty collection of key/value pairs.
        /// </summary>
        public static string Dictionary_CannotVerifyKeyContainmentAgainstEmptyCollectionOfKvp {
            get {
                return ResourceManager.GetString("Dictionary_CannotVerifyKeyContainmentAgainstEmptyCollectionOfKvp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify key containment against an empty sequence.
        /// </summary>
        public static string Dictionary_CannotVerifyKeyContainmentAgainstEmptySequence {
            get {
                return ResourceManager.GetString("Dictionary_CannotVerifyKeyContainmentAgainstEmptySequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify key containment against a &lt;null&gt; collection of keys.
        /// </summary>
        public static string Dictionary_CannotVerifyKeyContainmentAgainstNull {
            get {
                return ResourceManager.GetString("Dictionary_CannotVerifyKeyContainmentAgainstNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparing dictionary item {0} at {1} between subject and expectation.
        /// </summary>
        public static string Dictionary_ComparingDictionaryItemX0AtX1BetweenSubjectAndExpectationFormat {
            get {
                return ResourceManager.GetString("Dictionary_ComparingDictionaryItemX0AtX1BetweenSubjectAndExpectationFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect dictionaries {0} and {1} to be equal{{reason}}..
        /// </summary>
        public static string Dictionary_DidNotExpectDictionariesX0AndX1ToBeEqualFormat {
            get {
                return ResourceManager.GetString("Dictionary_DidNotExpectDictionariesX0AndX1ToBeEqualFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{context:Expectation}} implements multiple dictionary types.  It is not known which type should be use for equivalence.{0}The following IDictionary interfaces are implemented: {1}.
        /// </summary>
        public static string Dictionary_ExpectationImplementsMultipleDictionaryTypesFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectationImplementsMultipleDictionaryTypesFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} not to be empty{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryNotToBeEmpty {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryNotToBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} not to contain key {0}{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryNotToContainKeyX0Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryNotToContainKeyX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} not to contain value {0} at key {1}{{reason}}, but dictionary is {2}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryNotToContainValueX0AtKeyX1ButDictionaryIsX2Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryNotToContainValueX0AtKeyX1ButDictionaryIsX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} not to contain value {0} at key {1}{{reason}}, but found it anyhow..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryNotToContainValueX0AtKeyX1ButFoundItFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryNotToContainValueX0AtKeyX1ButFoundItFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} not to contain value {0}{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryNotToContainValueX0Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryNotToContainValueX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to be empty{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToBeEmpty {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to be equal to {0}{{reason}}, but could not find keys {1}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToBeEqualToX0ButCouldNotFindKeysX1Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToBeEqualToX0ButCouldNotFindKeysX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to be equal to {0}{{reason}}, but found additional keys {1}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToBeEqualToX0ButFoundMoreKeysX1Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToBeEqualToX0ButFoundMoreKeysX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to be equal to {0}{{reason}}, but {1} differs at key {2}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToBeEqualToX0ButX1DiffersAtKeyX2Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToBeEqualToX0ButX1DiffersAtKeyX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to be equal to {0}{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToBeEqualToX0Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToBeEqualToX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to contain at least {0} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToContainAtLeastX0ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToContainAtLeastX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to contain at most {0} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToContainAtMostX0ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToContainAtMostX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to contain fewer than {0} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToContainFewerThanX0ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToContainFewerThanX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to contain keys {0}{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToContainKeysX0Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToContainKeysX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to contain key/value pairs {0}{{reason}}, but dictionary is {1}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToContainKvpX0ButDictionaryIsX1Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToContainKvpX0ButDictionaryIsX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to contain more than {0} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToContainMoreThanX0ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToContainMoreThanX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to contain value {0} at key {1}{{reason}}, but dictionary is {2}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToContainValueX0AtKeyX1ButDictionaryIsX2Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToContainValueX0AtKeyX1ButDictionaryIsX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to contain value {0} at key {1}{{reason}}, but the key was not found..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToContainValueX0AtKeyX1ButKeyWasNotFoundFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToContainValueX0AtKeyX1ButKeyWasNotFoundFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to contain value {0} at key {1}{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToContainValueX0AtKeyX1Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToContainValueX0AtKeyX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to contain value {0}{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToContainValueX0Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToContainValueX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to contain {0}{{reason}}, but {{context:dictionary}} differs at keys {1}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToContainX0ButDiffersAtKeysX1Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToContainX0ButDiffersAtKeysX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to have {0} items{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToHaveX0ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToHaveX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to not contain key/value pairs {0}{{reason}}, but dictionary is {1}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToNotContainKvpX0ButDictionaryIsX1Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToNotContainKvpX0ButDictionaryIsX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to not contain key/value pairs {0}{{reason}}, but found them anyhow..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToNotContainKvpX0ButFoundThemFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToNotContainKvpX0ButFoundThemFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to not contain value {0} at key {1}{{reason}}, but found it anyhow..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToNotContainValueX0AtKeyX1ButFoundItFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToNotContainValueX0AtKeyX1ButFoundItFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to not contain value {0}{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToNotContainValueX0Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToNotContainValueX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to not have any items{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToNotHaveAnyItems {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToNotHaveAnyItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} to not have {0} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryToNotHaveX0ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryToNotHaveX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} not to contain key {1}{{reason}}, but found it anyhow..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0NotToContainKeyX1ButFoundItFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0NotToContainKeyX1ButFoundItFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} not to contain value {1}{{reason}}, but found it anyhow..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0NotToContainValueX1ButFoundItFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0NotToContainValueX1ButFoundItFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to contain at least {1} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToContainAtLeastX1ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToContainAtLeastX1ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to contain at most {1} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToContainAtMostX1ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToContainAtMostX1ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to contain fewer than {1} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToContainFewerThanX1ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToContainFewerThanX1ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to contain key(s) {1}{{reason}}, but could not find keys {2}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToContainKeysX1ButCouldNotFindKeysX2Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToContainKeysX1ButCouldNotFindKeysX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to contain key {1}{{reason}}, but could not find {2}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToContainKeyX1ButCouldNotFindX2Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToContainKeyX1ButCouldNotFindX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to contain key {1}{{reason}}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToContainKeyX1Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToContainKeyX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to contain more than {1} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToContainMoreThanX1ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToContainMoreThanX1ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to contain value {1}{{reason}}, but could not find {2}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToContainValueX1ButCouldNotFindX2Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToContainValueX1ButCouldNotFindX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to contain value {1}{{reason}}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToContainValueX1Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToContainValueX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to have a count {1}{{reason}}, but count is {2}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToHaveCountX1ButIsX2Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToHaveCountX1ButIsX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to have {1} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToHaveX1ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToHaveX1ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to not contain key {1}{{reason}}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToNotContainKeyX1DotFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToNotContainKeyX1DotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to not contain key {1}{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToNotContainKeyX1Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToNotContainKeyX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to not contain value {1}{{reason}}..
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToNotContainValueX1DotFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToNotContainValueX1DotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to not contain value {1}{{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToNotContainValueX1Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToNotContainValueX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:dictionary}} {0} to not have {1} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedDictionaryX0ToNotHaveX1ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedDictionaryX0ToNotHaveX1ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:subject}} to be a {0}.
        /// </summary>
        public static string Dictionary_ExpectedSubjectToBeAX0Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedSubjectToBeAX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:subject}} to be a dictionary, but it is not..
        /// </summary>
        public static string Dictionary_ExpectedSubjectToBeDictionaryButIsNot {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedSubjectToBeDictionaryButIsNot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:subject}} to be a dictionary with {0} item(s), but it only contains {1} item(s)..
        /// </summary>
        public static string Dictionary_ExpectedSubjectToBeDictionaryWithX0ItemsButItOnlyContainsX1ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedSubjectToBeDictionaryWithX0ItemsButItOnlyContainsX1ItemsFormat" +
                        "", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:subject}} to be a dictionary with {0} item(s), .
        /// </summary>
        public static string Dictionary_ExpectedSubjectToBeDictionaryWithX0ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedSubjectToBeDictionaryWithX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:subject}} to be {0}.
        /// </summary>
        public static string Dictionary_ExpectedSubjectToBeX0Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedSubjectToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:subject}} to contain key {0}..
        /// </summary>
        public static string Dictionary_ExpectedSubjectToContainKeyX0Format {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedSubjectToContainKeyX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} item(s){{reason}}.
        /// </summary>
        public static string Dictionary_ExpectedX0ItemsFormat {
            get {
                return ResourceManager.GetString("Dictionary_ExpectedX0ItemsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recursing into dictionary item {0} at {1}.
        /// </summary>
        public static string Dictionary_RecursingIntoDictionaryItemX0AtX1Format {
            get {
                return ResourceManager.GetString("Dictionary_RecursingIntoDictionaryItemX0AtX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {{context:subject}} dictionary has keys of type {0}; however, the expectation is not keyed with any compatible types.{1}The subject implements: {2}.
        /// </summary>
        public static string Dictionary_SubjectDictionaryHasKeysOfTypeX0ButExpectationIncompatibleTypesX1SubjectImplementsX2Format {
            get {
                return ResourceManager.GetString("Dictionary_SubjectDictionaryHasKeysOfTypeX0ButExpectationIncompatibleTypesX1Subje" +
                        "ctImplementsX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subject implements multiple IDictionary interfaces. .
        /// </summary>
        public static string Dictionary_SubjectImplementsMultipleIDictionaryInterfaces {
            get {
                return ResourceManager.GetString("Dictionary_SubjectImplementsMultipleIDictionaryInterfaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect the enum to have flag {0}{{reason}}..
        /// </summary>
        public static string Enum_DidNotExpectTheEnumToHaveFlagX0Format {
            get {
                return ResourceManager.GetString("Enum_DidNotExpectTheEnumToHaveFlagX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not know how to handle {0}.
        /// </summary>
        public static string Enum_DoNotKnowHowToHandleX0Format {
            get {
                return ResourceManager.GetString("Enum_DoNotKnowHowToHandleX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The enum was expected to have flag {0} but found {1}{{reason}}..
        /// </summary>
        public static string Enum_EnumWasExpectedToHaveFlagX0ButFoundX1Format {
            get {
                return ResourceManager.GetString("Enum_EnumWasExpectedToHaveFlagX0ButFoundX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:enum}} to equal {0} by name{{reason}}.
        /// </summary>
        public static string Enum_ExpectedEnumToEqualX0ByNameFormat {
            get {
                return ResourceManager.GetString("Enum_ExpectedEnumToEqualX0ByNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:enum}} to equal {0} by value{{reason}}.
        /// </summary>
        public static string Enum_ExpectedEnumToEqualX0ByValueFormat {
            get {
                return ResourceManager.GetString("Enum_ExpectedEnumToEqualX0ByValueFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the enum to be of type {0} type but found {1}{{reason}}..
        /// </summary>
        public static string Enum_ExpectedTheEnumToBeOfTypeX0ButFoundX1Format {
            get {
                return ResourceManager.GetString("Enum_ExpectedTheEnumToBeOfTypeX0ButFoundX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum recursion depth was reached.  .
        /// </summary>
        public static string Equivalency_MaximumRecursionDepthWasReached {
            get {
                return ResourceManager.GetString("Equivalency_MaximumRecursionDepthWasReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No members were found for comparison. Please specify some members to include in the comparison or choose a more meaningful assertion..
        /// </summary>
        public static string Equivalency_NoMembersWereFoundForComparison {
            get {
                return ResourceManager.GetString("Equivalency_NoMembersWereFoundForComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No {0} was found to handle the context. .
        /// </summary>
        public static string Equivalency_NoX0WasFoundToHandleTheContextFormat {
            get {
                return ResourceManager.GetString("Equivalency_NoX0WasFoundToHandleTheContextFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter count mismatch..
        /// </summary>
        public static string Equivalency_ParameterCountMismatch {
            get {
                return ResourceManager.GetString("Equivalency_ParameterCountMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot monitor the events of a &lt;null&gt; object..
        /// </summary>
        public static string Event_CannotMonitorEventsOfNullObject {
            get {
                return ResourceManager.GetString("Event_CannotMonitorEventsOfNullObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot monitor events on garbage-collected object.
        /// </summary>
        public static string Event_CannotMonitorEventsOnGarbageCollectedObject {
            get {
                return ResourceManager.GetString("Event_CannotMonitorEventsOnGarbageCollectedObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect object {0} to raise the {1} event for property {2}{{reason}}, but it did..
        /// </summary>
        public static string Event_DidNotExpectObjectX0ToRaiseEventX1ForPropertyX2ButItDidFormat {
            get {
                return ResourceManager.GetString("Event_DidNotExpectObjectX0ToRaiseEventX1ForPropertyX2ButItDidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected at least one event with arguments matching {0}, but found none..
        /// </summary>
        public static string Event_ExpectedAtLeastOneEventWithArgsMatchingX0ButFoundNoneFormat {
            get {
                return ResourceManager.GetString("Event_ExpectedAtLeastOneEventWithArgsMatchingX0ButFoundNoneFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected event from sender &lt;{0}&gt;, but event {1} does not include any arguments.
        /// </summary>
        public static string Event_ExpectedEventFromSenderX0ButEventX1DoesNotIncludeArgsFormat {
            get {
                return ResourceManager.GetString("Event_ExpectedEventFromSenderX0ButEventX1DoesNotIncludeArgsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected object {0} to not raise event {1}{{reason}}, but it did..
        /// </summary>
        public static string Event_ExpectedObjectX0ToNotRaiseEventX1ButItDidFormat {
            get {
                return ResourceManager.GetString("Event_ExpectedObjectX0ToNotRaiseEventX1ButItDidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected object {0} to raise event {1}{{reason}}, but it did not..
        /// </summary>
        public static string Event_ExpectedObjectX0ToRaiseEventX1ButItDidNotFormat {
            get {
                return ResourceManager.GetString("Event_ExpectedObjectX0ToRaiseEventX1ButItDidNotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected object {0} to raise event {1} for property {2}{{reason}}, but it did not..
        /// </summary>
        public static string Event_ExpectedObjectX0ToRaiseEventX1ForPropertyX2ButItDidNotFormat {
            get {
                return ResourceManager.GetString("Event_ExpectedObjectX0ToRaiseEventX1ForPropertyX2ButItDidNotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected sender {0}.
        /// </summary>
        public static string Event_ExpectedSenderX0Format {
            get {
                return ResourceManager.GetString("Event_ExpectedSenderX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No argument of event {0} is of type &lt;{1}&gt;..
        /// </summary>
        public static string Event_NoArgumentOfEventX0IsOfTypeX1Format {
            get {
                return ResourceManager.GetString("Event_NoArgumentOfEventX0IsOfTypeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not monitoring any events named &quot;{0}&quot;..
        /// </summary>
        public static string Event_NotMonitoringAnyEventsNamedX0Format {
            get {
                return ResourceManager.GetString("Event_NotMonitoringAnyEventsNamedX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type is not a Delegate!.
        /// </summary>
        public static string Event_TypeIsNotADelegate {
            get {
                return ResourceManager.GetString("Event_TypeIsNotADelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} does not expose any events..
        /// </summary>
        public static string Event_TypeX0DoesNotExposeAnyEventFormat {
            get {
                return ResourceManager.GetString("Event_TypeX0DoesNotExposeAnyEventFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use action assertions on an async void method. Assign the async method to a variable of type Func&lt;Task&gt; instead of Action so that it can be awaited..
        /// </summary>
        public static string Exception_CannotUseActionAssertionsOnAsyncVoidMethods {
            get {
                return ResourceManager.GetString("Exception_CannotUseActionAssertionsOnAsyncVoidMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but found &lt;{1}&gt;: {2}{3}..
        /// </summary>
        public static string Exception_CommaButFoundYZW {
            get {
                return ResourceManager.GetString("Exception_CommaButFoundYZW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but no exception was thrown..
        /// </summary>
        public static string Exception_CommaButNoExceptionWasThrown {
            get {
                return ResourceManager.GetString("Exception_CommaButNoExceptionWasThrown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but the thrown exception has no inner exception..
        /// </summary>
        public static string Exception_CommaButTheThrownExceptionHasNoInnerException {
            get {
                return ResourceManager.GetString("Exception_CommaButTheThrownExceptionHasNoInnerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect any exception{{reason}}.
        /// </summary>
        public static string Exception_DidNotExpectAnyException {
            get {
                return ResourceManager.GetString("Exception_DidNotExpectAnyException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {0}{{reason}}.
        /// </summary>
        public static string Exception_DidNotExpectX0Format {
            get {
                return ResourceManager.GetString("Exception_DidNotExpectX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a &lt;{0}&gt; to be thrown{{reason}}.
        /// </summary>
        public static string Exception_ExpectedAX0ToBeThrownFormat {
            get {
                return ResourceManager.GetString("Exception_ExpectedAX0ToBeThrownFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected exception where {0}{{reason}}, but the condition was not met by:{1}{1}{2}..
        /// </summary>
        public static string Exception_ExpectedExceptionWhereX0ButTheConditionWasNotMetByX1X1X2Format {
            get {
                return ResourceManager.GetString("Exception_ExpectedExceptionWhereX0ButTheConditionWasNotMetByX1X1X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected exception with message {0}{{reason}}.
        /// </summary>
        public static string Exception_ExpectedExceptionWithMessageX0Format {
            get {
                return ResourceManager.GetString("Exception_ExpectedExceptionWithMessageX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected inner {0}{{reason}}.
        /// </summary>
        public static string Exception_ExpectedInnerX0Format {
            get {
                return ResourceManager.GetString("Exception_ExpectedInnerX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0}{{reason}}.
        /// </summary>
        public static string Exception_ExpectedX0Format {
            get {
                return ResourceManager.GetString("Exception_ExpectedX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one exception was thrown.  FluentAssertions cannot determine which Exception was meant.{0}{1}.
        /// </summary>
        public static string Exception_MoreThanOneExceptionThrownCannotDetermineWhichOneX0X1Format {
            get {
                return ResourceManager.GetString("Exception_MoreThanOneExceptionThrownCannotDetermineWhichOneX0X1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it required exactly {2}..
        /// </summary>
        public static string ExecutionTime_CommaButItRequiredExactlyX2Format {
            get {
                return ResourceManager.GetString("ExecutionTime_CommaButItRequiredExactlyX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it required more than {2}..
        /// </summary>
        public static string ExecutionTime_CommaButItRequiredMoreThanX2Format {
            get {
                return ResourceManager.GetString("ExecutionTime_CommaButItRequiredMoreThanX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution of {0} should be greater or equal to {1}{{reason}}.
        /// </summary>
        public static string ExecutionTime_ExecutionOfX0ShouldBeGreaterOrEqualToX1Format {
            get {
                return ResourceManager.GetString("ExecutionTime_ExecutionOfX0ShouldBeGreaterOrEqualToX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution of {0} should be greater than {1}{{reason}}.
        /// </summary>
        public static string ExecutionTime_ExecutionOfX0ShouldBeGreaterThanX1Format {
            get {
                return ResourceManager.GetString("ExecutionTime_ExecutionOfX0ShouldBeGreaterThanX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution of {0} should be less or equal to {1}{{reason}}.
        /// </summary>
        public static string ExecutionTime_ExecutionOfX0ShouldBeLessOrEqualToX1Format {
            get {
                return ResourceManager.GetString("ExecutionTime_ExecutionOfX0ShouldBeLessOrEqualToX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution of {0} should be less than {1}{{reason}}.
        /// </summary>
        public static string ExecutionTime_ExecutionOfX0ShouldBeLessThanX1Format {
            get {
                return ResourceManager.GetString("ExecutionTime_ExecutionOfX0ShouldBeLessThanX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution of {0} should be within {1} from {2}{{reason}}, but it required exactly {3}..
        /// </summary>
        public static string ExecutionTime_ExecutionOfX0ShouldBeWithinX1FromX2ButItRequiredExactlyX3Format {
            get {
                return ResourceManager.GetString("ExecutionTime_ExecutionOfX0ShouldBeWithinX1FromX2ButItRequiredExactlyX3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution of {0} should be within {1} from {2}{{reason}}, but it required more than {3}..
        /// </summary>
        public static string ExecutionTime_ExecutionOfX0ShouldBeWithinX1FromX2ButItRequiredMoreThanX3Format {
            get {
                return ResourceManager.GetString("ExecutionTime_ExecutionOfX0ShouldBeWithinX1FromX2ButItRequiredMoreThanX3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot match an object against a &lt;null&gt; predicate..
        /// </summary>
        public static string Expression_CannotMatchObjectAgainstNullPredicate {
            get {
                return ResourceManager.GetString("Expression_CannotMatchObjectAgainstNullPredicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use &lt;{0}&gt; when a property expression is expected..
        /// </summary>
        public static string Expression_CannotUseXWhenPropertyExpressionExpected {
            get {
                return ResourceManager.GetString("Expression_CannotUseXWhenPropertyExpressionExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected an expression.
        /// </summary>
        public static string Expression_ExpectedAnExpression {
            get {
                return ResourceManager.GetString("Expression_ExpectedAnExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a property expression.
        /// </summary>
        public static string Expression_ExpectedPropertyExpression {
            get {
                return ResourceManager.GetString("Expression_ExpectedPropertyExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression &lt;{0}&gt; cannot be used to select a member..
        /// </summary>
        public static string Expression_ExpressionX0CannotBeUsedToSelectMemberFormat {
            get {
                return ResourceManager.GetString("Expression_ExpressionX0CannotBeUsedToSelectMemberFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (aggregated) .
        /// </summary>
        public static string Formatter_Aggregated {
            get {
                return ResourceManager.GetString("Formatter_Aggregated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , …{0} more….
        /// </summary>
        public static string Formatter_CommaX0MoreFormat {
            get {
                return ResourceManager.GetString("Formatter_CommaX0MoreFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{Cyclic reference to type {0} detected}}.
        /// </summary>
        public static string Formatter_CyclicReferenceToTypeX0DetectedFormat {
            get {
                return ResourceManager.GetString("Formatter_CyclicReferenceToTypeX0DetectedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatting a child value requires a path.
        /// </summary>
        public static string Formatter_FormattingChildValueRequiresPath {
            get {
                return ResourceManager.GetString("Formatter_FormattingChildValueRequiresPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{Maximum recursion depth was reached…}}.
        /// </summary>
        public static string Formatter_MaxRecursionDepthWasReached {
            get {
                return ResourceManager.GetString("Formatter_MaxRecursionDepthWasReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Member &apos;{0}&apos; threw an exception: &apos;{1}&apos;].
        /// </summary>
        public static string Formatter_MemberX0ThrewAnExceptionX1Format {
            get {
                return ResourceManager.GetString("Formatter_MemberX0ThrewAnExceptionX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System.Object (HashCode={0}).
        /// </summary>
        public static string Formatter_SystemObjectHashCodeX0Format {
            get {
                return ResourceManager.GetString("Formatter_SystemObjectHashCodeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the {0} delegate inside a {1} to recursively format children.
        /// </summary>
        public static string Formatter_UseTheX0DelegateInsideX1ToRecursivelyFormatChildrenFormat {
            get {
                return ResourceManager.GetString("Formatter_UseTheX0DelegateInsideX1ToRecursivelyFormatChildrenFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (aggregated) exceptions:{1}.
        /// </summary>
        public static string Formatter_X0AggregatedExceptionsX1Format {
            get {
                return ResourceManager.GetString("Formatter_X0AggregatedExceptionsX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} with message &quot;{1}&quot;{2}.
        /// </summary>
        public static string Formatter_X0WithMessageX1X2Format {
            get {
                return ResourceManager.GetString("Formatter_X0WithMessageX1X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}With {1}:{0}{2}.
        /// </summary>
        public static string Formatter_X0WithX1ColonX2Format {
            get {
                return ResourceManager.GetString("Formatter_X0WithX1ColonX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:Guid}} to be empty{{reason}}..
        /// </summary>
        public static string Guid_DidNotExpectGuidToBeEmpty {
            get {
                return ResourceManager.GetString("Guid_DidNotExpectGuidToBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:Guid}} to be {0}{{reason}}..
        /// </summary>
        public static string Guid_DidNotExpectGuidToBeX0Format {
            get {
                return ResourceManager.GetString("Guid_DidNotExpectGuidToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:Guid}} to be empty{{reason}}.
        /// </summary>
        public static string Guid_ExpectedGuidToBeEmpty {
            get {
                return ResourceManager.GetString("Guid_ExpectedGuidToBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:Guid}} to be {0}{{reason}}.
        /// </summary>
        public static string Guid_ExpectedGuidToBeX0Format {
            get {
                return ResourceManager.GetString("Guid_ExpectedGuidToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include all non-private fields.
        /// </summary>
        public static string IncludeAllNonPrivateFields {
            get {
                return ResourceManager.GetString("IncludeAllNonPrivateFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include all non-private properties.
        /// </summary>
        public static string IncludeAllNonPrivateProperties {
            get {
                return ResourceManager.GetString("IncludeAllNonPrivateProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include member root.{0}.
        /// </summary>
        public static string IncludeMemberRootDotX0Format {
            get {
                return ResourceManager.GetString("IncludeMemberRootDotX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include member when {0}.
        /// </summary>
        public static string IncludeMemberWhenX0Format {
            get {
                return ResourceManager.GetString("IncludeMemberWhenX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match member by name (or throw).
        /// </summary>
        public static string MatchMemberByNameOrThrow {
            get {
                return ResourceManager.GetString("MatchMemberByNameOrThrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude member root.{0}.
        /// </summary>
        public static string Member_ExcludeMemberRootX0DotFormat {
            get {
                return ResourceManager.GetString("Member_ExcludeMemberRootX0DotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude member when {0}.
        /// </summary>
        public static string Member_ExcludeMemberWhenX0Format {
            get {
                return ResourceManager.GetString("Member_ExcludeMemberWhenX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expectation has {0}.{1} that the other object does not have..
        /// </summary>
        public static string Member_ExpectationHasMemberPathX0DotX1ThatTheOtherObjectDoesNotHaveFormat {
            get {
                return ResourceManager.GetString("Member_ExpectationHasMemberPathX0DotX1ThatTheOtherObjectDoesNotHaveFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expectation has member {0} that the other object does not have..
        /// </summary>
        public static string Member_ExpectationHasMemberX0ThatTheOtherObjectDoesNotHaveFormat {
            get {
                return ResourceManager.GetString("Member_ExpectationHasMemberX0ThatTheOtherObjectDoesNotHaveFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} {1} to be decorated with {2}{{reason}}.
        /// </summary>
        public static string MemberInfo_ExpectedX0X1ToBeDecoratedWithX2Format {
            get {
                return ResourceManager.GetString("MemberInfo_ExpectedX0X1ToBeDecoratedWithX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} {1} to not be decorated with {2}{{reason}}.
        /// </summary>
        public static string MemberInfo_ExpectedX0X1ToNotBeDecoratedWithX2Format {
            get {
                return ResourceManager.GetString("MemberInfo_ExpectedX0X1ToNotBeDecoratedWithX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1}.
        /// </summary>
        public static string MemberInfo_SubjectDescriptionFormat {
            get {
                return ResourceManager.GetString("MemberInfo_SubjectDescriptionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but it is not virtual..
        /// </summary>
        public static string Method_CommaButItIsNotVirtual {
            get {
                return ResourceManager.GetString("Method_CommaButItIsNotVirtual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected method {0} not to be async{{reason}}.
        /// </summary>
        public static string Method_ExpectedMethodX0NotToBeAsyncFormat {
            get {
                return ResourceManager.GetString("Method_ExpectedMethodX0NotToBeAsyncFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected method {0} not to be virtual{{reason}}.
        /// </summary>
        public static string Method_ExpectedMethodX0NotToBeVirtualFormat {
            get {
                return ResourceManager.GetString("Method_ExpectedMethodX0NotToBeVirtualFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected method {0} not to be {1}{{reason}}.
        /// </summary>
        public static string Method_ExpectedMethodX0NotToBeX1Format {
            get {
                return ResourceManager.GetString("Method_ExpectedMethodX0NotToBeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected method {0} to be async{{reason}}.
        /// </summary>
        public static string Method_ExpectedMethodX0ToBeAsyncFormat {
            get {
                return ResourceManager.GetString("Method_ExpectedMethodX0ToBeAsyncFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected method {0} to be virtual{{reason}}.
        /// </summary>
        public static string Method_ExpectedMethodX0ToBeVirtualFormat {
            get {
                return ResourceManager.GetString("Method_ExpectedMethodX0ToBeVirtualFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected method {0} to be {1}{{reason}}.
        /// </summary>
        public static string Method_ExpectedMethodX0ToBeX1Format {
            get {
                return ResourceManager.GetString("Method_ExpectedMethodX0ToBeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the return type of method {0} not to be void{{reason}}.
        /// </summary>
        public static string Method_ExpectedReturnTypeOfMethodX0NotToBeVoidFormat {
            get {
                return ResourceManager.GetString("Method_ExpectedReturnTypeOfMethodX0NotToBeVoidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the return type of method {0} not to be {1}{{reason}}.
        /// </summary>
        public static string Method_ExpectedReturnTypeOfMethodX0NotToBeX1Format {
            get {
                return ResourceManager.GetString("Method_ExpectedReturnTypeOfMethodX0NotToBeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the return type of method {0} to be void{{reason}}.
        /// </summary>
        public static string Method_ExpectedReturnTypeOfMethodX0ToBeVoidFormat {
            get {
                return ResourceManager.GetString("Method_ExpectedReturnTypeOfMethodX0ToBeVoidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected the return type of method {0} to be {1}{{reason}}.
        /// </summary>
        public static string Method_ExpectedReturnTypeOfMethodX0ToBeX1Format {
            get {
                return ResourceManager.GetString("Method_ExpectedReturnTypeOfMethodX0ToBeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1}.{2}.
        /// </summary>
        public static string MethodInfo_DescriptionFormat {
            get {
                return ResourceManager.GetString("MethodInfo_DescriptionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all selected methods not to be virtual{{reason}}, but the following methods are virtual:{0}{1}.
        /// </summary>
        public static string MethodInfo_ExpectedAllSelectedMethodsNotToBeVirtualButTheFollowingMethodsAreX0X1Format {
            get {
                return ResourceManager.GetString("MethodInfo_ExpectedAllSelectedMethodsNotToBeVirtualButTheFollowingMethodsAreX0X1F" +
                        "ormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all selected methods to be decorated with {0}{{reason}}, but the following methods are not:{1}{2}.
        /// </summary>
        public static string MethodInfo_ExpectedAllSelectedMethodsToBeDecoratedWithX0ButFollowingMethodsAreNotX1X2Format {
            get {
                return ResourceManager.GetString("MethodInfo_ExpectedAllSelectedMethodsToBeDecoratedWithX0ButFollowingMethodsAreNot" +
                        "X1X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all selected methods to be virtual{{reason}}, but the following methods are not virtual:{0}{1}.
        /// </summary>
        public static string MethodInfo_ExpectedAllSelectedMethodsToBeVirtualButTheFollowingMethodsAreNotX0X1Format {
            get {
                return ResourceManager.GetString("MethodInfo_ExpectedAllSelectedMethodsToBeVirtualButTheFollowingMethodsAreNotX0X1F" +
                        "ormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all selected methods to not be decorated with {0}{{reason}}, but the following methods are:{1}{2}.
        /// </summary>
        public static string MethodInfo_ExpectedAllSelectedMethodsToNotBeDecoratedWithX0ButFollowingMethodsAreX1X2Format {
            get {
                return ResourceManager.GetString("MethodInfo_ExpectedAllSelectedMethodsToNotBeDecoratedWithX0ButFollowingMethodsAre" +
                        "X1X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:value}} to be within {0} from {1}{{reason}}.
        /// </summary>
        public static string Numeric_DidNotExpectValueToBeWithinX0FromX1Format {
            get {
                return ResourceManager.GetString("Numeric_DidNotExpectValueToBeWithinX0FromX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:value}} to be {0}{{reason}}..
        /// </summary>
        public static string Numeric_DidNotExpectValueToBeX0Format {
            get {
                return ResourceManager.GetString("Numeric_DidNotExpectValueToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to be one of {0}{{reason}}.
        /// </summary>
        public static string Numeric_ExpectecValueToBeOneOfX0Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectecValueToBeOneOfX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to approximate {0} +/- {1}{{reason}}.
        /// </summary>
        public static string Numeric_ExpectedValueToApproximateX0X1Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToApproximateX0X1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to approximate {1} +/- {2}{{reason}}, but {0} differed by {3}..
        /// </summary>
        public static string Numeric_ExpectedValueToApproximateX1X2ButX0DifferedByX3Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToApproximateX1X2ButX0DifferedByX3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to be between {0} and {1}{{reason}}.
        /// </summary>
        public static string Numeric_ExpectedValueToBeBetweenX0AndX1Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToBeBetweenX0AndX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to be greater or equal to {0}{{reason}}.
        /// </summary>
        public static string Numeric_ExpectedValueToBeGreaterOrEqualToX0Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToBeGreaterOrEqualToX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to be greater than {0}{{reason}}.
        /// </summary>
        public static string Numeric_ExpectedValueToBeGreaterThanX0Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToBeGreaterThanX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to be less or equal to {0}{{reason}}.
        /// </summary>
        public static string Numeric_ExpectedValueToBeLessOrEqualToX0Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToBeLessOrEqualToX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to be less than {0}{{reason}}.
        /// </summary>
        public static string Numeric_ExpectedValueToBeLessThanX0Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToBeLessThanX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to be negative{{reason}}.
        /// </summary>
        public static string Numeric_ExpectedValueToBeNegative {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to be positive{{reason}}.
        /// </summary>
        public static string Numeric_ExpectedValueToBePositive {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to be within {0} from {1}{{reason}}.
        /// </summary>
        public static string Numeric_ExpectedValueToBeWithinX0FromX1Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToBeWithinX0FromX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to be {0}{{reason}}.
        /// </summary>
        public static string Numeric_ExpectedValueToBeX0Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to not approximate {0} +/- {1}{{reason}}, but it was {2}..
        /// </summary>
        public static string Numeric_ExpectedValueToNotApproximateX0X1ButItWasX2Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToNotApproximateX0X1ButItWasX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to not approximate {1} +/- {2}{{reason}}, but {0} only differed by {3}..
        /// </summary>
        public static string Numeric_ExpectedValueToNotApproximateX1X2ButX0DifferedByX3Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToNotApproximateX1X2ButX0DifferedByX3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:value}} to not be between {0} and {1}{{reason}}.
        /// </summary>
        public static string Numeric_ExpectedValueToNotBeBetweenX0AndX1Format {
            get {
                return ResourceManager.GetString("Numeric_ExpectedValueToNotBeBetweenX0AndX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This class only supports types implementing IComparable..
        /// </summary>
        public static string Numeric_ThisClassOnlySupportsTypeImplementingIComparable {
            get {
                return ResourceManager.GetString("Numeric_ThisClassOnlySupportsTypeImplementingIComparable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect a value{{reason}}.
        /// </summary>
        public static string Object_DidNotExpectAValue {
            get {
                return ResourceManager.GetString("Object_DidNotExpectAValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context}} to refer to {0}{{reason}}..
        /// </summary>
        public static string Object_DidNotExpectContextToReferToX0Format {
            get {
                return ResourceManager.GetString("Object_DidNotExpectContextToReferToX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:object}} to be equal to {0}{{reason}}..
        /// </summary>
        public static string Object_DidNotExpectObjectToBeEqualToX0Format {
            get {
                return ResourceManager.GetString("Object_DidNotExpectObjectToBeEqualToX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {0}{{reason}}..
        /// </summary>
        public static string Object_DidNotExpectX0Format {
            get {
                return ResourceManager.GetString("Object_DidNotExpectX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a value{{reason}}..
        /// </summary>
        public static string Object_ExpectedAValue {
            get {
                return ResourceManager.GetString("Object_ExpectedAValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:object}} to not be between {0} and {1}{{reason}}.
        /// </summary>
        public static string Object_ExpectedObjectNotToBeBetweenX0AndX1Format {
            get {
                return ResourceManager.GetString("Object_ExpectedObjectNotToBeBetweenX0AndX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:object}} not to be equivalent to {0}, but they are..
        /// </summary>
        public static string Object_ExpectedObjectNotToBeEquivalentToX0ButTheyAreFormat {
            get {
                return ResourceManager.GetString("Object_ExpectedObjectNotToBeEquivalentToX0ButTheyAreFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:object}} to be between {0} and {1}{{reason}}.
        /// </summary>
        public static string Object_ExpectedObjectToBeBetweenX0AndX1Format {
            get {
                return ResourceManager.GetString("Object_ExpectedObjectToBeBetweenX0AndX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:object}} to be equal to {0}{{reason}}.
        /// </summary>
        public static string Object_ExpectedObjectToBeEqualToX0Format {
            get {
                return ResourceManager.GetString("Object_ExpectedObjectToBeEqualToX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:object}} to be {0}{{reason}}.
        /// </summary>
        public static string Object_ExpectedObjectToBeX0Format {
            get {
                return ResourceManager.GetString("Object_ExpectedObjectToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:object}} {0} to be greater or equal to {1}{{reason}}..
        /// </summary>
        public static string Object_ExpectedObjectX0ToBeGreaterOrEqualToX1Format {
            get {
                return ResourceManager.GetString("Object_ExpectedObjectX0ToBeGreaterOrEqualToX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:object}} {0} to be greater than {1}{{reason}}..
        /// </summary>
        public static string Object_ExpectedObjectX0ToBeGreaterThanX1Format {
            get {
                return ResourceManager.GetString("Object_ExpectedObjectX0ToBeGreaterThanX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:object}} {0} to be less or equal to {1}{{reason}}..
        /// </summary>
        public static string Object_ExpectedObjectX0ToBeLessOrEqualToX1Format {
            get {
                return ResourceManager.GetString("Object_ExpectedObjectX0ToBeLessOrEqualToX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:object}} {0} to be less than {1}{{reason}}..
        /// </summary>
        public static string Object_ExpectedObjectX0ToBeLessThanX1Format {
            get {
                return ResourceManager.GetString("Object_ExpectedObjectX0ToBeLessThanX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type to be {0}{{reason}}.
        /// </summary>
        public static string Object_ExpectedTypeToBeX0Format {
            get {
                return ResourceManager.GetString("Object_ExpectedTypeToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0}{{reason}}.
        /// </summary>
        public static string Object_ExpectedX0Format {
            get {
                return ResourceManager.GetString("Object_ExpectedX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} to be serializable{{reason}}, but serialization failed with:{1}{1}{2}..
        /// </summary>
        public static string Object_ExpectedX0ToBeSerializableButSerializationFailedWithX1X2Format {
            get {
                return ResourceManager.GetString("Object_ExpectedX0ToBeSerializableButSerializationFailedWithX1X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:property}} {0} to have a getter{{reason}}.
        /// </summary>
        public static string Property_ExpectedContextPropertyX0ToHaveAGetterFormat {
            get {
                return ResourceManager.GetString("Property_ExpectedContextPropertyX0ToHaveAGetterFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:property}} {0} not to have a getter{{reason}}..
        /// </summary>
        public static string Property_ExpectedPropertyX0NotToHaveAGetterFormat {
            get {
                return ResourceManager.GetString("Property_ExpectedPropertyX0NotToHaveAGetterFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:property}} {0} not to have a setter{{reason}}..
        /// </summary>
        public static string Property_ExpectedPropertyX0NotToHaveASetterFormat {
            get {
                return ResourceManager.GetString("Property_ExpectedPropertyX0NotToHaveASetterFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected property {0} to have a getter{{reason}}.
        /// </summary>
        public static string Property_ExpectedPropertyX0ToHaveAGetterFormat {
            get {
                return ResourceManager.GetString("Property_ExpectedPropertyX0ToHaveAGetterFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:property}} {0} to have a setter{{reason}}..
        /// </summary>
        public static string Property_ExpectedPropertyX0ToHaveASetterFormat {
            get {
                return ResourceManager.GetString("Property_ExpectedPropertyX0ToHaveASetterFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected property {0} not to be virtual{{reason}}.
        /// </summary>
        public static string Property_ExpectedPropertyXNotToBeVirtual {
            get {
                return ResourceManager.GetString("Property_ExpectedPropertyXNotToBeVirtual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected property {0} to be virtual{{reason}}.
        /// </summary>
        public static string Property_ExpectedPropertyXToBeVirtual {
            get {
                return ResourceManager.GetString("Property_ExpectedPropertyXToBeVirtual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected Type of property {0} not to be {1}{{reason}}.
        /// </summary>
        public static string Property_ExpectedTypeOfPropertyX0NotToBeX1Format {
            get {
                return ResourceManager.GetString("Property_ExpectedTypeOfPropertyX0NotToBeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected Type of property {0} to be {1}{{reason}}.
        /// </summary>
        public static string Property_ExpectedTypeOfPropertyX0ToBeX1Format {
            get {
                return ResourceManager.GetString("Property_ExpectedTypeOfPropertyX0ToBeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1}.{2}.
        /// </summary>
        public static string Property_GetDescriptionFormat {
            get {
                return ResourceManager.GetString("Property_GetDescriptionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all selected properties not to be decorated with {0}{{reason}}, but the following properties are:{1}{2}.
        /// </summary>
        public static string PropertyInfo_ExpectedAllSelectedPropertiesNotToBeDecoratedWithX0ButFollowingPropertiesAreX1X2Format {
            get {
                return ResourceManager.GetString("PropertyInfo_ExpectedAllSelectedPropertiesNotToBeDecoratedWithX0ButFollowingPrope" +
                        "rtiesAreX1X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all selected properties not to be virtual{{reason}}, but the following properties are virtual:{0}{1}.
        /// </summary>
        public static string PropertyInfo_ExpectedAllSelectedPropertiesNotToBeVirtualButTheFollowingPropertiesAreX0X1Format {
            get {
                return ResourceManager.GetString("PropertyInfo_ExpectedAllSelectedPropertiesNotToBeVirtualButTheFollowingProperties" +
                        "AreX0X1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all selected properties to be decorated with {0}{{reason}}, but the following properties are not:{1}{2}.
        /// </summary>
        public static string PropertyInfo_ExpectedAllSelectedPropertiesToBeDecoratedWithX0ButFollowingPropertiesAreNotX1X2Format {
            get {
                return ResourceManager.GetString("PropertyInfo_ExpectedAllSelectedPropertiesToBeDecoratedWithX0ButFollowingProperti" +
                        "esAreNotX1X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all selected properties to be virtual{{reason}}, but the following properties are not virtual:{0}{1}.
        /// </summary>
        public static string PropertyInfo_ExpectedAllSelectedPropertiesToBeVirtualButTheFollowingPropertiesAreNotX0X1Format {
            get {
                return ResourceManager.GetString("PropertyInfo_ExpectedAllSelectedPropertiesToBeVirtualButTheFollowingPropertiesAre" +
                        "NotX0X1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all selected properties to have a setter{{reason}}, but the following properties do not:{0}{1}.
        /// </summary>
        public static string PropertyInfo_ExpectedAllSelectedPropertiesToHaveASetterButTheFollowingPropertiesDoNotX0X1Format {
            get {
                return ResourceManager.GetString("PropertyInfo_ExpectedAllSelectedPropertiesToHaveASetterButTheFollowingPropertiesD" +
                        "oNotX0X1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context}} not to be &lt;null&gt;{{reason}}..
        /// </summary>
        public static string RefType_ExpectedContextNotToBeNull {
            get {
                return ResourceManager.GetString("RefType_ExpectedContextNotToBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context}} not to be {0}{{reason}}.
        /// </summary>
        public static string RefType_ExpectedContextNotToBeX0Format {
            get {
                return ResourceManager.GetString("RefType_ExpectedContextNotToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context}} to be assignable to {0}{{reason}}, but {1} is not..
        /// </summary>
        public static string RefType_ExpectedContextToBeAssignableToX0ButX1IsNotFormat {
            get {
                return ResourceManager.GetString("RefType_ExpectedContextToBeAssignableToX0ButX1IsNotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context}} to be &lt;null&gt;{{reason}}, but found {0}..
        /// </summary>
        public static string RefType_ExpectedContextToBeNullButFoundX0Format {
            get {
                return ResourceManager.GetString("RefType_ExpectedContextToBeNullButFoundX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context}} to be {0}{{reason}}.
        /// </summary>
        public static string RefType_ExpectedContextToBeX0Format {
            get {
                return ResourceManager.GetString("RefType_ExpectedContextToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context}} to not be assignable to {0}{{reason}}, but {1} is..
        /// </summary>
        public static string RefType_ExpectedContextToNotBeAssignableX0ToButX1IsFormat {
            get {
                return ResourceManager.GetString("RefType_ExpectedContextToNotBeAssignableX0ToButX1IsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context}} to refer to {0}{{reason}}.
        /// </summary>
        public static string RefType_ExpectedContextToReferToX0Format {
            get {
                return ResourceManager.GetString("RefType_ExpectedContextToReferToX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:object}} to match {1}{{reason}}.
        /// </summary>
        public static string RefType_ExpectedObjectToMatchY {
            get {
                return ResourceManager.GetString("RefType_ExpectedObjectToMatchY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but {1} does not..
        /// </summary>
        public static string String_ButX1DoesNotFormat {
            get {
                return ResourceManager.GetString("String_ButX1DoesNotFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to but {1} matches..
        /// </summary>
        public static string String_ButX1MatchesFormat {
            get {
                return ResourceManager.GetString("String_ButX1MatchesFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assert string containment against an empty string..
        /// </summary>
        public static string String_CannotAssertStringContainmentAgainstAnEmptyString {
            get {
                return ResourceManager.GetString("String_CannotAssertStringContainmentAgainstAnEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assert string containment against &lt;null&gt;..
        /// </summary>
        public static string String_CannotAssertStringContainmentAgainstNull {
            get {
                return ResourceManager.GetString("String_CannotAssertStringContainmentAgainstNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assert string containment of values in empty collection.
        /// </summary>
        public static string String_CannotAssertStringContainmentOfValuesInEmptyCollection {
            get {
                return ResourceManager.GetString("String_CannotAssertStringContainmentOfValuesInEmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assert string containment of values in null collection.
        /// </summary>
        public static string String_CannotAssertStringContainmentOfValuesInNullCollection {
            get {
                return ResourceManager.GetString("String_CannotAssertStringContainmentOfValuesInNullCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare end of string with empty string..
        /// </summary>
        public static string String_CannotCompareEndOfStringWithEmptyString {
            get {
                return ResourceManager.GetString("String_CannotCompareEndOfStringWithEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare end of string with &lt;null&gt;..
        /// </summary>
        public static string String_CannotCompareEndOfStringWithNull {
            get {
                return ResourceManager.GetString("String_CannotCompareEndOfStringWithNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare start of string with empty string..
        /// </summary>
        public static string String_CannotCompareStartOfStringWithEmptyString {
            get {
                return ResourceManager.GetString("String_CannotCompareStartOfStringWithEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare start of string with &lt;null&gt;..
        /// </summary>
        public static string String_CannotCompareStartOfStringWithNull {
            get {
                return ResourceManager.GetString("String_CannotCompareStartOfStringWithNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare string end equivalence with empty string..
        /// </summary>
        public static string String_CannotCompareStringEndEquivalenceWithEmptyString {
            get {
                return ResourceManager.GetString("String_CannotCompareStringEndEquivalenceWithEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare string end equivalence with &lt;null&gt;..
        /// </summary>
        public static string String_CannotCompareStringEndEquivalenceWithNull {
            get {
                return ResourceManager.GetString("String_CannotCompareStringEndEquivalenceWithNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare string end with empty string..
        /// </summary>
        public static string String_CannotCompareStringEndWithEmptyString {
            get {
                return ResourceManager.GetString("String_CannotCompareStringEndWithEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare string end with &lt;null&gt;..
        /// </summary>
        public static string String_CannotCompareStringEndWithNull {
            get {
                return ResourceManager.GetString("String_CannotCompareStringEndWithNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare string start equivalence with empty string..
        /// </summary>
        public static string String_CannotCompareStringStartEquivalenceWithEmptyString {
            get {
                return ResourceManager.GetString("String_CannotCompareStringStartEquivalenceWithEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compare string start equivalence with &lt;null&gt;..
        /// </summary>
        public static string String_CannotCompareStringStartEquivalenceWithNull {
            get {
                return ResourceManager.GetString("String_CannotCompareStringStartEquivalenceWithNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot match string against &lt;null&gt;..
        /// </summary>
        public static string String_CannotMatchStringAgainstNull {
            get {
                return ResourceManager.GetString("String_CannotMatchStringAgainstNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot match {{context:string}} against {0} because it is not a valid regular expression..
        /// </summary>
        public static string String_CannotMatchStringAgainstX0BecauseItIsNotValidRegexFormat {
            get {
                return ResourceManager.GetString("String_CannotMatchStringAgainstX0BecauseItIsNotValidRegexFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but {1} does not match..
        /// </summary>
        public static string String_CommaButX1DoesNotMatchFormat {
            get {
                return ResourceManager.GetString("String_CommaButX1DoesNotMatchFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:string}} to be empty{{reason}}..
        /// </summary>
        public static string String_DidNotExpectStringToBeEmpty {
            get {
                return ResourceManager.GetString("String_DidNotExpectStringToBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:string}} to contain equivalent of {0}{{reason}} but found {1}..
        /// </summary>
        public static string String_DidNotExpectStringToContainEquivalentOfX1ButFoundX2Format {
            get {
                return ResourceManager.GetString("String_DidNotExpectStringToContainEquivalentOfX1ButFoundX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:string}} to match the equivalent of {0}{{reason}}, .
        /// </summary>
        public static string String_DidNotExpectStringToMatchEquivalentOfX0Format {
            get {
                return ResourceManager.GetString("String_DidNotExpectStringToMatchEquivalentOfX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:string}} to match regex {0}{{reason}}, but {1} matches..
        /// </summary>
        public static string String_DidNotExpectStringToMatchRegexX0ButX1MatchesFormat {
            get {
                return ResourceManager.GetString("String_DidNotExpectStringToMatchRegexX0ButX1MatchesFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:string}} to match {0}{{reason}}, .
        /// </summary>
        public static string String_DidNotExpectStringToMatchX0Format {
            get {
                return ResourceManager.GetString("String_DidNotExpectStringToMatchX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:string}} {0} to contain all of the strings: {1}{{reason}}..
        /// </summary>
        public static string String_DidNotExpectStringX0ToContainAllOfTheStringsX1Format {
            get {
                return ResourceManager.GetString("String_DidNotExpectStringX0ToContainAllOfTheStringsX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:string}} {0} to contain any of the strings: {1}{{reason}}..
        /// </summary>
        public static string String_DidNotExpectStringX0ToContainAnyOfTheStringsX1Format {
            get {
                return ResourceManager.GetString("String_DidNotExpectStringX0ToContainAnyOfTheStringsX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect {{context:string}} {0} to contain {1}{{reason}}..
        /// </summary>
        public static string String_DidNotExpectStringX0ToContainX1Format {
            get {
                return ResourceManager.GetString("String_DidNotExpectStringX0ToContainX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} not to be &lt;null&gt; or empty{{reason}}.
        /// </summary>
        public static string String_ExpectedStringNotToBeNullOrEmpty {
            get {
                return ResourceManager.GetString("String_ExpectedStringNotToBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} not to be &lt;null&gt; or whitespace{{reason}}.
        /// </summary>
        public static string String_ExpectedStringNotToBeNullOrWhitespace {
            get {
                return ResourceManager.GetString("String_ExpectedStringNotToBeNullOrWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} not to be {0}{{reason}}..
        /// </summary>
        public static string String_ExpectedStringNotToBeX0Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringNotToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} that does not end with equivalent of {0}{{reason}}.
        /// </summary>
        public static string String_ExpectedStringThatDoesNotEndWithEquivalentOfX0Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringThatDoesNotEndWithEquivalentOfX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} that does not end with equivalent of {0}.
        /// </summary>
        public static string String_ExpectedStringThatDoesNotEndWithEquivalentOfX0NoReasonFormat {
            get {
                return ResourceManager.GetString("String_ExpectedStringThatDoesNotEndWithEquivalentOfX0NoReasonFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} that does not end with {0}.
        /// </summary>
        public static string String_ExpectedStringThatDoesNotEndWithX0Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringThatDoesNotEndWithX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} that does not start with .
        /// </summary>
        public static string String_ExpectedStringThatDoesNotStartWith {
            get {
                return ResourceManager.GetString("String_ExpectedStringThatDoesNotStartWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} that does not start with equivalent of .
        /// </summary>
        public static string String_ExpectedStringThatDoesNotStartWithEquivalentOf {
            get {
                return ResourceManager.GetString("String_ExpectedStringThatDoesNotStartWithEquivalentOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} that ends with equivalent of {0}{{reason}}.
        /// </summary>
        public static string String_ExpectedStringThatEndsWithEquivalentOfX0Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringThatEndsWithEquivalentOfX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to be .
        /// </summary>
        public static string String_ExpectedStringToBe {
            get {
                return ResourceManager.GetString("String_ExpectedStringToBe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to be empty{{reason}}.
        /// </summary>
        public static string String_ExpectedStringToBeEmpty {
            get {
                return ResourceManager.GetString("String_ExpectedStringToBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to be equivalent to .
        /// </summary>
        public static string String_ExpectedStringToBeEquivalentTo {
            get {
                return ResourceManager.GetString("String_ExpectedStringToBeEquivalentTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to be &lt;null&gt; or empty{{reason}}.
        /// </summary>
        public static string String_ExpectedStringToBeNullOrEmpty {
            get {
                return ResourceManager.GetString("String_ExpectedStringToBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to be &lt;null&gt; or whitespace{{reason}}.
        /// </summary>
        public static string String_ExpectedStringToBeNullOrWhitespace {
            get {
                return ResourceManager.GetString("String_ExpectedStringToBeNullOrWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to be one of {0}{{reason}}.
        /// </summary>
        public static string String_ExpectedStringToBeOneOfX0Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringToBeOneOfX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to contain equivalent of {0}{{reason}} but found {1}..
        /// </summary>
        public static string String_ExpectedStringToContainEquivalentOfX0ButFoundX1Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringToContainEquivalentOfX0ButFoundX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to end with equivalent of {0}{{reason}}, but {1} is too short..
        /// </summary>
        public static string String_ExpectedStringToEndWithEquivalentOfX0ButX1IsTooShortFormat {
            get {
                return ResourceManager.GetString("String_ExpectedStringToEndWithEquivalentOfX0ButX1IsTooShortFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to end with {0}{{reason}}, but {1} is too short..
        /// </summary>
        public static string String_ExpectedStringToEndWithX0ButX1IsTooShortFormat {
            get {
                return ResourceManager.GetString("String_ExpectedStringToEndWithX0ButX1IsTooShortFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to match the equivalent of {0}{{reason}}, .
        /// </summary>
        public static string String_ExpectedStringToMatchEquivalentOfX0Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringToMatchEquivalentOfX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to match regex {0}{{reason}}.
        /// </summary>
        public static string String_ExpectedStringToMatchRegexX0Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringToMatchRegexX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to match {0}{{reason}}, .
        /// </summary>
        public static string String_ExpectedStringToMatchX0Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringToMatchX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to not match regex {0}{{reason}}.
        /// </summary>
        public static string String_ExpectedStringToNotMatchRegexX0Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringToNotMatchRegexX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to start with .
        /// </summary>
        public static string String_ExpectedStringToStartWith {
            get {
                return ResourceManager.GetString("String_ExpectedStringToStartWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} to start with equivalent of .
        /// </summary>
        public static string String_ExpectedStringToStartWithEquivalentOf {
            get {
                return ResourceManager.GetString("String_ExpectedStringToStartWithEquivalentOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} with length {0}{{reason}}, but found string {1} with length {2}..
        /// </summary>
        public static string String_ExpectedStringWithLengthX0ButFoundStringX1WithLengthX2Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringWithLengthX0ButFoundStringX1WithLengthX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} {0} not to end with {1}{{reason}}..
        /// </summary>
        public static string String_ExpectedStringX0NotToEndWithX1Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringX0NotToEndWithX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} {0} to contain at least one of the strings: {1}{{reason}}..
        /// </summary>
        public static string String_ExpectedStringX0ToContainAtLeastOneOfTheStringsX1Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringX0ToContainAtLeastOneOfTheStringsX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} {0} to contain the strings: {1}{{reason}}..
        /// </summary>
        public static string String_ExpectedStringX0ToContainTheStringsX1Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringX0ToContainTheStringsX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} {0} to contain {1}{{reason}}..
        /// </summary>
        public static string String_ExpectedStringX0ToContainX1Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringX0ToContainX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:string}} {0} to end with {1}{{reason}}..
        /// </summary>
        public static string String_ExpectedStringX0ToEndWithX1Format {
            get {
                return ResourceManager.GetString("String_ExpectedStringX0ToEndWithX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}{{reason}}, but it has unexpected whitespace at the end..
        /// </summary>
        public static string String_X0ButItHasUnexpectedWhitespaceAtTheEndFormat {
            get {
                return ResourceManager.GetString("String_X0ButItHasUnexpectedWhitespaceAtTheEndFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}{{reason}}, but it misses some extra whitespace at the end..
        /// </summary>
        public static string String_X0ButItMissesSomeExtraWhitespaceAtTheEndFormat {
            get {
                return ResourceManager.GetString("String_X0ButItMissesSomeExtraWhitespaceAtTheEndFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}{{reason}}, but {1} differs near {2}..
        /// </summary>
        public static string String_X0ButX1DiffersNearX2Format {
            get {
                return ResourceManager.GetString("String_X0ButX1DiffersNearX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}{{reason}}, but {1} is too short..
        /// </summary>
        public static string String_X0ButX1IsTooShortFormat {
            get {
                return ResourceManager.GetString("String_X0ButX1IsTooShortFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}{{reason}}.
        /// </summary>
        public static string String_X0Format {
            get {
                return ResourceManager.GetString("String_X0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} with a length of {1}{{reason}}, but {2} has a length of {3}, differs near {4}..
        /// </summary>
        public static string String_X0WithALengthOfX1ButIX2HasALengthOfX3DiffersNearX4Format {
            get {
                return ResourceManager.GetString("String_X0WithALengthOfX1ButIX2HasALengthOfX3DiffersNearX4Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:task}} to complete within {0}{{reason}}..
        /// </summary>
        public static string Task_ExpectedTaskToCompleteWithinX0Format {
            get {
                return ResourceManager.GetString("Task_ExpectedTaskToCompleteWithinX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create the assertion exception for the current test framework: &quot;{0}&quot;.
        /// </summary>
        public static string TestFwk_FailedToCreateAssertionExceptionForTestFrameworkX0Format {
            get {
                return ResourceManager.GetString("TestFwk_FailedToCreateAssertionExceptionForTestFrameworkX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create the assertion exception for the current test framework: &quot;{0}, {1}&quot;.
        /// </summary>
        public static string TestFwk_FailedToCreateAssertionExceptionForTestFrameworkX0X1Format {
            get {
                return ResourceManager.GetString("TestFwk_FailedToCreateAssertionExceptionForTestFrameworkX0X1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FluentAssertions was configured to use {0} but the required test framework assembly could not be found.
        /// </summary>
        public static string TestFwk_FluentAssertionsConfiguredToUseXButCouldNotFindTestFramework {
            get {
                return ResourceManager.GetString("TestFwk_FluentAssertionsConfiguredToUseXButCouldNotFindTestFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect any exceptions after {0}{{reason}}.
        /// </summary>
        public static string TimeSpan_DidNotExpectAnyExceptionsAfterX0Format {
            get {
                return ResourceManager.GetString("TimeSpan_DidNotExpectAnyExceptionsAfterX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of {0} must be non-negative..
        /// </summary>
        public static string TimeSpan_TheValueOfX0MustBeNonNegativeFormat {
            get {
                return ResourceManager.GetString("TimeSpan_TheValueOfX0MustBeNonNegativeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try to match member by name.
        /// </summary>
        public static string TryToMatchMemberByName {
            get {
                return ResourceManager.GetString("TryToMatchMemberByName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but a matching attribute was found..
        /// </summary>
        public static string Type_CommaButAMatchingAttributeWasFound {
            get {
                return ResourceManager.GetString("Type_CommaButAMatchingAttributeWasFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but no matching attribute was found..
        /// </summary>
        public static string Type_CommaButNoMatchingAttributeWasFound {
            get {
                return ResourceManager.GetString("Type_CommaButNoMatchingAttributeWasFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but the attribute was found..
        /// </summary>
        public static string Type_CommaButTheAttributeWasFound {
            get {
                return ResourceManager.GetString("Type_CommaButTheAttributeWasFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but the attribute was not found..
        /// </summary>
        public static string Type_CommaButTheAttributeWasNotFound {
            get {
                return ResourceManager.GetString("Type_CommaButTheAttributeWasNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all types to be decorated with or inherit {0}{{reason}}, but the attribute was not found on the following types:{1}{2}..
        /// </summary>
        public static string Type_ExpectedAllTypesToBeDecoratedWithOrInheritX0ButTheAttributeWasNotFoundOnTypesX1X2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedAllTypesToBeDecoratedWithOrInheritX0ButTheAttributeWasNotFoundOnType" +
                        "sX1X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all types to be decorated with or inherit {0} that matches {1}{{reason}}, but no matching attribute was found on the following types:{2}{3}..
        /// </summary>
        public static string Type_ExpectedAllTypesToBeDecoratedWithOrInheritX0ThatMatchesX2ButNoAttributeWasFoundOnTypesX2X3Format {
            get {
                return ResourceManager.GetString("Type_ExpectedAllTypesToBeDecoratedWithOrInheritX0ThatMatchesX2ButNoAttributeWasFo" +
                        "undOnTypesX2X3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all types to be decorated with {0}{{reason}}, but the attribute was not found on the following types:{1}{2}..
        /// </summary>
        public static string Type_ExpectedAllTypesToBeDecoratedWithX0ButTheAttributeWasNotFoundOnTypesX1X2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedAllTypesToBeDecoratedWithX0ButTheAttributeWasNotFoundOnTypesX1X2Form" +
                        "at", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all types to be decorated with {0} that matches {1}{{reason}}, but no matching attribute was found on the following types:{2}{3}..
        /// </summary>
        public static string Type_ExpectedAllTypesToBeDecoratedWithX0ThatMatchesX1ButNoMatchingAttributeWasFoundOnTypesX2X3Format {
            get {
                return ResourceManager.GetString("Type_ExpectedAllTypesToBeDecoratedWithX0ThatMatchesX1ButNoMatchingAttributeWasFou" +
                        "ndOnTypesX2X3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all types to not be decorated with or inherit {0}{{reason}}, but the attribute was found on the following types:{1}{2}..
        /// </summary>
        public static string Type_ExpectedAllTypesToNotBeDecoratedWithOrInheritX0ButAttributeWasFoundOnTypesX1X2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedAllTypesToNotBeDecoratedWithOrInheritX0ButAttributeWasFoundOnTypesX1" +
                        "X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all types to not be decorated with or inherit {0} that matches {1}{{reason}}, but a matching attribute was found on the following types:{2}{3}..
        /// </summary>
        public static string Type_ExpectedAllTypesToNotBeDecoratedWithOrInheritX0ThatMatchesX1ButAttributeWasFoundOnTypesX2X3Format {
            get {
                return ResourceManager.GetString("Type_ExpectedAllTypesToNotBeDecoratedWithOrInheritX0ThatMatchesX1ButAttributeWasF" +
                        "oundOnTypesX2X3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all types to not be decorated with {0}{{reason}}, but the attribute was found on the following types:{1}{2}..
        /// </summary>
        public static string Type_ExpectedAllTypesToNotBeDecoratedWithX0ButTheAttributeWasFoundOnTypesX1X2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedAllTypesToNotBeDecoratedWithX0ButTheAttributeWasFoundOnTypesX1X2Form" +
                        "at", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected all types to not be decorated with {0} that matches {1}{{reason}}, but a matching attribute was found on the following types:{2}{3}..
        /// </summary>
        public static string Type_ExpectedAllTypesToNotBeDecoratedWithX0ThatMatchesX1ButAMatchingAttributeWasFoundOnTypesX2X3Format {
            get {
                return ResourceManager.GetString("Type_ExpectedAllTypesToNotBeDecoratedWithX0ThatMatchesX1ButAMatchingAttributeWasF" +
                        "oundOnTypesX2X3Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected constructor {0}({1}) not to exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedConstructorX0X1NotToExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedConstructorX0X1NotToExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected constructor {0}({1}) to exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedConstructorX0X1ToExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedConstructorX0X1ToExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:{0}}} {1} to be assignable to {2}{{reason}}.
        /// </summary>
        public static string Type_ExpectedContextX0X1ToBeAssignableToX2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedContextX0X1ToBeAssignableToX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {{context:{0}}} {1} to not be assignable to {2}{{reason}}.
        /// </summary>
        public static string Type_ExpectedContextX0X1ToNotBeAssignableToX2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedContextX0X1ToNotBeAssignableToX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected indexer {0}[{1}] to not exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedIndexerX0X1ToNotExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedIndexerX0X1ToNotExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected method {0}({1}) to not exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedMethodX0X1ToNotExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedMethodX0X1ToNotExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected method {0}.{1}({2}) to exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedMethodX0X1X2ToExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedMethodX0X1X2ToExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected public static explicit {0}({1}) to exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedPublicStaticExplicitX0X1ToExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedPublicStaticExplicitX0X1ToExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected public static explicit {0}({1}) to not exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedPublicStaticExplicitX0X1ToNotExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedPublicStaticExplicitX0X1ToNotExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected public static implicit {0}({1}) to exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedPublicStaticImplicitX0X1ToExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedPublicStaticImplicitX0X1ToExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected public static implicit {0}({1}) to not exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedPublicStaticImplicitX0X1ToNotExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedPublicStaticImplicitX0X1ToNotExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type not to be {0}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeNotToBeX0Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeNotToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type to be {0}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeToBeX0Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} not to be abstract{{reason}}..
        /// </summary>
        public static string Type_ExpectedTypeX0NotToBeAbstractFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0NotToBeAbstractFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} not to be derived from {1}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0NotToBeDerivedFromX1Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0NotToBeDerivedFromX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} not to be sealed{{reason}}..
        /// </summary>
        public static string Type_ExpectedTypeX0NotToBeSealedFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0NotToBeSealedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} not to be static{{reason}}..
        /// </summary>
        public static string Type_ExpectedTypeX0NotToBeStaticFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0NotToBeStaticFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} not to be {1}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0NotToBeX1Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0NotToBeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to be abstract{{reason}}..
        /// </summary>
        public static string Type_ExpectedTypeX0ToBeAbstractFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToBeAbstractFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to be decorated with or inherit {1}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToBeDecoratedWithOrInheritX1Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToBeDecoratedWithOrInheritX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to be decorated with or inherit {1} that matches {2}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToBeDecoratedWithOrInheritX1ThatMatchesX2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToBeDecoratedWithOrInheritX1ThatMatchesX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to be decorated with {1}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToBeDecoratedWithX1Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToBeDecoratedWithX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to be decorated with {1} that matches {2}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToBeDecoratedWithX1ThatMatchesX2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToBeDecoratedWithX1ThatMatchesX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to be derived from {1}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToBeDerivedFromX1Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToBeDerivedFromX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to be sealed{{reason}}..
        /// </summary>
        public static string Type_ExpectedTypeX0ToBeSealedFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToBeSealedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to be static{{reason}}..
        /// </summary>
        public static string Type_ExpectedTypeX0ToBeStaticFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToBeStaticFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to be {1}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToBeX1Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToBeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to implement interface {1}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToImplementInterfaceX1Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToImplementInterfaceX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to not be decorated with or inherit {1}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToNotBeDecoratedWithOrInheritX1Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToNotBeDecoratedWithOrInheritX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to not be decorated with or inherit {1} that matches {2}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToNotBeDecoratedWithOrInheritX1ThatMatchesX2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToNotBeDecoratedWithOrInheritX1ThatMatchesX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to not be decorated with {1}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToNotBeDecoratedWithX1Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToNotBeDecoratedWithX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to not be decorated with {1} that matches {2}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToNotBeDecoratedWithX1ThatMatchesX2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToNotBeDecoratedWithX1ThatMatchesX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected type {0} to not implement interface {1}{{reason}}.
        /// </summary>
        public static string Type_ExpectedTypeX0ToNotImplementInterfaceX1Format {
            get {
                return ResourceManager.GetString("Type_ExpectedTypeX0ToNotImplementInterfaceX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} to be of type {1}{{reason}}.
        /// </summary>
        public static string Type_ExpectedX0ToBeOfTypeX1Format {
            get {
                return ResourceManager.GetString("Type_ExpectedX0ToBeOfTypeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} to explicitly implement {1}.{2}{{reason}}.
        /// </summary>
        public static string Type_ExpectedX0ToExplicitlyImplementX1X2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedX0ToExplicitlyImplementX1X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} to not exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedX0ToNotExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedX0ToNotExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} to not explicitly implement {1}.{2}{{reason}}.
        /// </summary>
        public static string Type_ExpectedX0ToNotExplicitlyImplementX1X2Format {
            get {
                return ResourceManager.GetString("Type_ExpectedX0ToNotExplicitlyImplementX1X2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} {1}.{2} to exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedX0X1DotX2ToExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedX0X1DotX2ToExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} {1}[{2}] to exist{{reason}}.
        /// </summary>
        public static string Type_ExpectedX0X1X2ToExistFormat {
            get {
                return ResourceManager.GetString("Type_ExpectedX0X1X2ToExistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be an interface Type..
        /// </summary>
        public static string Type_MustBeAnInterfaceType {
            get {
                return ResourceManager.GetString("Type_MustBeAnInterfaceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must not be an interface Type..
        /// </summary>
        public static string Type_MustNotBeAnInterfaceType {
            get {
                return ResourceManager.GetString("Type_MustNotBeAnInterfaceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be a class..
        /// </summary>
        public static string Type_X0MustBeAClassFormat {
            get {
                return ResourceManager.GetString("Type_X0MustBeAClassFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Treating {0} as a value type because Equals must be used..
        /// </summary>
        public static string ValueType_TreatingX0AsValueTypeBecauseEqualsMustBeUsedFormat {
            get {
                return ResourceManager.GetString("ValueType_TreatingX0AsValueTypeBecauseEqualsMustBeUsedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Treating {0} as a value type because object overrides Equals..
        /// </summary>
        public static string ValueType_TreatingX0AsValueTypeBecauseEqualsOverriddenFormat {
            get {
                return ResourceManager.GetString("ValueType_TreatingX0AsValueTypeBecauseEqualsOverriddenFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assert the document has an element if the document itself is &lt;null&gt;..
        /// </summary>
        public static string Xml_CannotAssertDocumentHasElementIfElementIsNull {
            get {
                return ResourceManager.GetString("Xml_CannotAssertDocumentHasElementIfElementIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assert the document has an element if the element name is &lt;null&gt;*.
        /// </summary>
        public static string Xml_CannotAssertDocumentHasElementIfElementNameIsNull {
            get {
                return ResourceManager.GetString("Xml_CannotAssertDocumentHasElementIfElementNameIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assert the document has a root element if the document itself is &lt;null&gt;..
        /// </summary>
        public static string Xml_CannotAssertDocumentHasRootElementIfElementIsNull {
            get {
                return ResourceManager.GetString("Xml_CannotAssertDocumentHasRootElementIfElementIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assert the document has a root element if the element name is &lt;null&gt;*.
        /// </summary>
        public static string Xml_CannotAssertDocumentHasRootElementIfElementNameIsNull {
            get {
                return ResourceManager.GetString("Xml_CannotAssertDocumentHasRootElementIfElementNameIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but no such child element was found..
        /// </summary>
        public static string Xml_CommaButNoSuchChildElementWasFound {
            get {
                return ResourceManager.GetString("Xml_CommaButNoSuchChildElementWasFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , but XML document has no Root element..
        /// </summary>
        public static string Xml_CommaButXmlDocumentHasNoRootElement {
            get {
                return ResourceManager.GetString("Xml_CommaButXmlDocumentHasNoRootElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect to find attribute {0} at {1}{{reason}}..
        /// </summary>
        public static string Xml_DidNotExpectToFindAttributeX0AtX1Format {
            get {
                return ResourceManager.GetString("Xml_DidNotExpectToFindAttributeX0AtX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect XML attribute to be {0}{{reason}}..
        /// </summary>
        public static string Xml_DidNotExpectXmlAttributeToBeX0Format {
            get {
                return ResourceManager.GetString("Xml_DidNotExpectXmlAttributeToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect XML document to be {0}, but found &lt;null&gt;..
        /// </summary>
        public static string Xml_DidNotExpectXmlDocumentToBeX0ButFoundNullFormat {
            get {
                return ResourceManager.GetString("Xml_DidNotExpectXmlDocumentToBeX0ButFoundNullFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect XML document to be {0}{{reason}}..
        /// </summary>
        public static string Xml_DidNotExpectXmlDocumentToBeX0Format {
            get {
                return ResourceManager.GetString("Xml_DidNotExpectXmlDocumentToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not expect Xml to be equivalent{{reason}}, but it is..
        /// </summary>
        public static string Xml_DidNotExpectXmlToBeEquivalentButItIs {
            get {
                return ResourceManager.GetString("Xml_DidNotExpectXmlToBeEquivalentButItIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected attribute {0} at {1}{{reason}}, but found none..
        /// </summary>
        public static string Xml_ExpectedAttributeX0AtX1ButFoundNoneFormat {
            get {
                return ResourceManager.GetString("Xml_ExpectedAttributeX0AtX1ButFoundNoneFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected attribute {0} at {1} to have value {2}{{reason}}.
        /// </summary>
        public static string Xml_ExpectedAttributeX0AtX1ToHaveValueX2Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedAttributeX0AtX1ToHaveValueX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected content to be {0} at {1}{{reason}}.
        /// </summary>
        public static string Xml_ExpectedContentToBeX0AtX1Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedContentToBeX0AtX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected end of document{{reason}}.
        /// </summary>
        public static string Xml_ExpectedEndOfDocument {
            get {
                return ResourceManager.GetString("Xml_ExpectedEndOfDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected local name of element at {0} to be {1}{{reason}}.
        /// </summary>
        public static string Xml_ExpectedLocalNameOfElementAtX0ToBeX1Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedLocalNameOfElementAtX0ToBeX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected namespace of element {0} at {1} to be {2}{{reason}}.
        /// </summary>
        public static string Xml_ExpectedNamespaceOfElementX0AtX1ToBeX2Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedNamespaceOfElementX0AtX1ToBeX2Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected node of type {0} at {1}{{reason}}.
        /// </summary>
        public static string Xml_ExpectedNodeOfTypeX0AtX1Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedNodeOfTypeX0AtX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0}{{reason}}, but found end of document..
        /// </summary>
        public static string Xml_ExpectedX0ButFoundEndOfDocumentFormat {
            get {
                return ResourceManager.GetString("Xml_ExpectedX0ButFoundEndOfDocumentFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML attribute to be {0}{{reason}}.
        /// </summary>
        public static string Xml_ExpectedXmlAttributeToBeX0Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedXmlAttributeToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML attribute {0} to have value {1}{{reason}}.
        /// </summary>
        public static string Xml_ExpectedXmlAttributeX0ToHaveValueX1Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedXmlAttributeX0ToHaveValueX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML document to be {0}{{reason}}.
        /// </summary>
        public static string Xml_ExpectedXmlDocumentToBeX0Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedXmlDocumentToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML document to have root element &quot;{0}&quot;{{reason}}.
        /// </summary>
        public static string Xml_ExpectedXmlDocumentToHaveRootElementX0Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedXmlDocumentToHaveRootElementX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML document {0} to have root element with child &quot;{1}&quot;{{reason}}.
        /// </summary>
        public static string Xml_ExpectedXmlDocumentX0ToHaveRootElementWithChildX1Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedXmlDocumentX0ToHaveRootElementWithChildX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML element not to be {0}{{reason}}..
        /// </summary>
        public static string Xml_ExpectedXmlElementNotToBeX0Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedXmlElementNotToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML element &apos;{0}&apos; to have value {1}{{reason}}.
        /// </summary>
        public static string Xml_ExpectedXmlElementQuoteX0QuoteToHaveValueX1Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedXmlElementQuoteX0QuoteToHaveValueX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML element to be {0}{{reason}}.
        /// </summary>
        public static string Xml_ExpectedXmlElementToBeX0Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedXmlElementToBeX0Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML element to have attribute {0} with value {1}{{reason}}, but found no such attribute in {2}.
        /// </summary>
        public static string Xml_ExpectedXmlElementToHaveAttributeX0WithValueX1ButFoundNoSuchAttributeInX2Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedXmlElementToHaveAttributeX0WithValueX1ButFoundNoSuchAttributeInX2Form" +
                        "at", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML element {0} to have child element &quot;{1}&quot;{{reason}}.
        /// </summary>
        public static string Xml_ExpectedXmlElementX0ToHaveChildElementX1Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedXmlElementX0ToHaveChildElementX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML element {0} to have value {1}{{reason}}.
        /// </summary>
        public static string Xml_ExpectedXmlElementX0ToHaveValueX1Format {
            get {
                return ResourceManager.GetString("Xml_ExpectedXmlElementX0ToHaveValueX1Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [XML document without root element].
        /// </summary>
        public static string Xml_FormatDocumentWithoutRoot {
            get {
                return ResourceManager.GetString("Xml_FormatDocumentWithoutRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} found at {1} is not supported for equivalency comparison..
        /// </summary>
        public static string Xml_X0FoundAtX1IsNotSupportedForEquivalencyComparisonFormat {
            get {
                return ResourceManager.GetString("Xml_X0FoundAtX1IsNotSupportedForEquivalencyComparisonFormat", resourceCulture);
            }
        }
    }
}
